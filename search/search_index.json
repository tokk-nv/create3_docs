{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"iRobot\u00ae Create\u00ae 3 Educational Robot","text":""},{"location":"#what-is-irobot-create-3","title":"What is iRobot\u00ae Create\u00ae 3?","text":"<p>iRobot\u00ae Create\u00ae 3 is an affordable, mobile robotics platform for educators, students, and developers.</p> <p>The robot has a full suite of on-board sensors and actuators which will allow you to develop and test your robotics algorithms.</p> <p>The software is entirely based on ROS 2: all sensors data are produced through ROS 2 publications while ROS 2 servers and subscriptions are used to control actuators and respond to users requests. The robot also provides some autonomous behaviors out of the box, such as docking, wall-follow and reactions to obstacles. All these can be triggered and/or configured through ROS 2 actions and parameters.</p> <p>Designed for beginner to advanced ROS 2 users, Create\u00ae 3 allows for a variety of programming methods. With Wi-fi and Bluetooth capability, Ethernet over USB connections, plus a removable faceplate for attaching payloads, you can start building with your Create\u00ae 3 right away.</p> <p>More detailed documentation can be accessed using the left navigation bar, or if it is collapsed, the \u2630 menu in the top left corner of this page.</p>"},{"location":"#key-internal-docs-links","title":"Key internal docs links","text":"<ul> <li>Hardware</li> <li>ROS 2 API</li> <li>Software Releases</li> </ul>"},{"location":"#useful-external-links","title":"Useful external links","text":"<p>Here you can find additional content on the iRobot\u00ae Create\u00ae 3:</p> <ul> <li>Create\u00ae 3 Discussion Forum</li> <li>Create\u00ae ROS 2 Messages Definitions</li> <li>Create\u00ae 3 Gazebo Simulator</li> <li>Create\u00ae 3 Examples</li> </ul>"},{"location":"api/docking/","title":"Create\u00ae 3 Docking","text":"<p>The Create\u00ae 3 robot is equipped with a docking station to recharge it between experiments.</p> <p>Through the ROS 21 APIs users can command docking and undocking autonomous behaviors.</p> <p>Warning</p> <p>Note that the docking action and sensor topic changed between Galactic and Humble.</p> <p>In order for the robot to detect the dock, determine its location, and understand when it is succesfully docked, it is necessary that the docking station is connected to a power source.</p>"},{"location":"api/docking/#built-in-docking-behaviors","title":"Built-in docking behaviors","text":""},{"location":"api/docking/#undocking","title":"Undocking","text":"<p>You can command the robot to undock using the following ROS 2 action.</p> <pre><code>ros2 action send_goal /undock irobot_create_msgs/action/Undock \"{}\"\n</code></pre> <p>The robot will move backward out of the dock and then it will rotate 180 degrees.</p> <p>This action will fail if the robot is already undocked.</p>"},{"location":"api/docking/#docking","title":"Docking","text":"<p>You can command the robot to dock using a ROS 2 action.</p>"},{"location":"api/docking/#galactic","title":"Galactic","text":"<pre><code>ros2 action send_goal /dock irobot_create_msgs/action/DockServo \"{}\"\n</code></pre>"},{"location":"api/docking/#humble","title":"Humble","text":"<pre><code>ros2 action send_goal /dock irobot_create_msgs/action/Dock \"{}\"\n</code></pre> <p>The robot will first search for the dock in its immediate surroundings. Note that the action will fail if the robot is too far from the dock. You can check if the dock is visible by subscribing to the (in Galactic) <code>/dock</code> (or in Humble) <code>/dock_status</code> ROS 2 topic.</p> <p>Then the robot will align with the dock and carefully drive onto it.</p> <p>This action will fail if the robot is already docked.</p>"},{"location":"api/docking/#docking-sensor-data","title":"Docking sensor data","text":"<p>The Create\u00ae 3 robot exposes several docking-related information through its ROS 2 publications. These should allow users to write their own algorithms taking into account the presence of the dock in the environment and even to write their own docking and undocking procedures.</p>"},{"location":"api/docking/#ir-opcodes","title":"IR opcodes","text":"<p>The Create\u00ae 3 docking station transmit several IR signals. The Create\u00ae 3 robot is equipped with two different sensors that are capable of detecting them.</p> <p></p> <p>The robot will publish these signals in the <code>/ir_opcode</code> ROS 2 topic. Each message will contain a time-stamped detection of one of those signals, including the identifier of the sensor that detected it.</p>"},{"location":"api/docking/#dock-information","title":"Dock information","text":"<p>In Galactic, more high-level information is produced by the robot in the <code>/dock</code> ROS 2 topic. In Humble and beyond, the topic has been renamed to <code>/dock_status</code>. Here it's possible to quickly know if the robot is able to see the dock from its current location and whether it is currently docked or not.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/drive-goals/","title":"Create\u00ae 3 Drive Goals","text":"<p>The Create\u00ae 3 robot exposes some actions for simple driving goals that close the loop on odometry position.</p> <p>Through the ROS 21 APIs users can command:</p> <ul> <li> <p>Driving along a specified arc</p> </li> <li> <p>Driving in a straight line for a fixed distance</p> </li> <li> <p>Navigating to a specified odometry position and orientation</p> </li> <li> <p>Rotating a fixed angle</p> </li> </ul> <p>A cliff event or a wheel stall will trigger a goal to cancel, otherwise it will run until the robot achieves the odometry goal or it's canceled by the user. If there is something blocking the robot's path, the user must intervene to stop the robot, otherwise it will continue to bump until odometry slip achieves the goal position.</p>"},{"location":"api/drive-goals/#built-in-drive-goals-behaviors","title":"Built-in Drive Goals behaviors","text":""},{"location":"api/drive-goals/#drive-arc","title":"Drive Arc","text":"<p>You can command the robot to drive a fixed angle along an arc defined by radius:</p> <pre><code>ros2 action send_goal /drive_arc irobot_create_msgs/action/DriveArc \"{angle: 1.57,radius: 0.3,translate_direction: 1,max_translation_speed: 0.3}\"\n</code></pre> <p>The robot will drive forward or backward given the translate direction along an arc defined by radius until it achieves the specified relative heading.</p>"},{"location":"api/drive-goals/#drive-distance","title":"Drive Distance","text":"<p>You can command the robot to drive a fixed distance in a straight line:</p> <pre><code>ros2 action send_goal /drive_distance irobot_create_msgs/action/DriveDistance \"{distance: 0.5,max_translation_speed: 0.15}\"\n</code></pre> <p>The robot will drive straight until it has traveled the specified distance in odometry frame. It will drive backwards if distance is negative (be aware of the backup limit).</p>"},{"location":"api/drive-goals/#navigate-to-position","title":"Navigate To Position","text":"<p>You can command the robot to drive to the specified odometry position:</p> <pre><code>ros2 action send_goal /navigate_to_position irobot_create_msgs/action/NavigateToPosition \"{achieve_goal_heading: true,goal_pose:{pose:{position:{x: 1,y: 0.2,z: 0.0}, orientation:{x: 0.0,y: 0.0, z: 0.0, w: 1.0}}}}\"\n</code></pre> <p>The robot will take a rotate -&gt; translate -&gt; rotate approach to achieve the goal position. First rotating from its current heading to face the goal position, then driving straight to the goal position, then optionally rotating to achieve the goal heading.</p>"},{"location":"api/drive-goals/#rotate-angle","title":"Rotate Angle","text":"<p>You can command the robot to rotate a relative angle from current robot heading:</p> <pre><code>ros2 action send_goal /rotate_angle irobot_create_msgs/action/RotateAngle \"{angle: 1.57,max_rotation_speed: 0.5}\"\n</code></pre> <p>The robot will rotate either clockwise (negative angle) or counter clockwise (positive angle) until it has achieved the angle offset.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/hazards/","title":"Hazards Detection","text":"<p>The Create\u00ae 3 robot is equipped with a variety of sensors that are capable to detect hazards in the environment.</p> <p>In particular you will find:</p> <ul> <li>Bumper sensor to detect front contacts.</li> <li>Cliff sensors to detect holes and steps.</li> <li>Wheel drop sensors to detect if a wheel is not touching the ground.</li> </ul>"},{"location":"api/hazards/#the-hazard_detection-topic","title":"The <code>hazard_detection</code> topic","text":"<p>The Create\u00ae 3 robot will periodically publish on the <code>hazard_detection</code> ROS 21 topic a vector of all the currently detected hazards. If the vector is empty, this means that no hazards are currently being detected.</p> <p>Each element of the vector will denote a different hazard detection. Look at the HazardDetection.msg definition in order to see how to differentiate different types of hazards. The <code>header</code> field of each indivdual detection will provide all the information required to localize it. In particular the timestamp will denote when the robot detected the hazard and the frame id will denote the location of the sensor that performed the detection.</p> <p>Important</p> <p>The <code>hazard_detection</code> topic will also contain a <code>BACKUP_LIMIT</code> hazard if the robot safety features are preventing it from safely moving further backwards. Look at the safety documentation for details and how to disable it.</p>"},{"location":"api/hazards/#the-kidnap_status-topic","title":"The <code>kidnap_status</code> topic","text":"<p>By \"kidnap\" we denote the action of manually lifting the robot and, eventually, placing it back in a location which may be different from the original one.</p> <p>The Create\u00ae 3 robot combines together different sensors data in order to determine when it's being kidnapped. A boolean status will be periodically published on the <code>kidnap_status</code> topic.</p>"},{"location":"api/hazards/#the-ir_intensity-topic","title":"The <code>ir_intensity</code> topic","text":"<p>Besides the aforementioned sensors, the Create\u00ae 3 robot is also equipped with 7 sets of IR emitters and receivers and it can use them to detect objects at close range.</p> <p>The Create\u00ae 3 robot will periodically publish on the <code>ir_intensity</code> topic the raw intensity readings obtained from these sensors. The message will be a vector where each element corresponds to a different sensor. The higher the intensity value is, the closer an obstacle is to the robot. The <code>header</code> field of each indivdual detection will provide all the information required to localize it. In particular the timestamp will denote when the robot detected the hazard and the frame id will denote the location of the sensor that performed the detection.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/odometry/","title":"Odometry Estimation","text":"<p>The Create\u00ae 3 robot is equipped with a variety of sensors that are used to detect its motions. In particular you will find:</p> <ul> <li>IMU</li> <li>Optical mouse</li> <li>Wheel encoders</li> </ul> <p>Many details about these messages can be found in the message definitions themselves, which are linked below.</p>"},{"location":"api/odometry/#raw-sensor-topics","title":"Raw sensor topics","text":"<p>If you want to implement your own algorithms using the raw sensor readings, you can read them from the following topics:</p>"},{"location":"api/odometry/#the-imu-topic","title":"The <code>imu</code> topic","text":"<p>The <code>imu</code> topic produces messages of type <code>sensor_msgs/msg/Imu</code>. As of G.4 / H.1, this topic publishes at 100 Hz. Prior to these releases, this topic published at 62.5 Hz.</p>"},{"location":"api/odometry/#the-mouse-topic","title":"The <code>mouse</code> topic","text":"<p>The <code>mouse</code> topic produces messages of type <code>irobot_create_msgs/msg/Mouse</code>. This topic publishes at 62.5 Hz.</p>"},{"location":"api/odometry/#the-wheel_status-topic","title":"The <code>wheel_status</code> topic","text":"<p>The <code>wheel_status</code> topic produces messages of type <code>irobot_create_msgs/msg/WheelStatus</code>. This topic publishes at 62.5 Hz.</p>"},{"location":"api/odometry/#the-wheel_ticks-topic","title":"The <code>wheel_ticks</code> topic","text":"<p>The <code>wheel_ticks</code> topic produces messages of type <code>irobot_create_msgs/msg/WheelTicks</code>. This topic publishes at 62.5 Hz. There are 508.8 ticks per wheel rotation.</p>"},{"location":"api/odometry/#the-wheel_vels-topic","title":"The <code>wheel_vels</code> topic","text":"<p>The <code>wheel_status</code> topic produces messages of type <code>irobot_create_msgs/msg/WheelStatus</code>. This topic publishes at 62.5 Hz.</p>"},{"location":"api/odometry/#fused-sensor-topics","title":"Fused Sensor topics","text":"<p>The following topics are computed on-board the Create 3 robot using its raw sensor data.</p>"},{"location":"api/odometry/#the-odom-topic","title":"The <code>odom</code> topic","text":"<p>The <code>odom</code> topic produces messages of type <code>nav_msgs/msg/Odometry</code>. The Create\u00ae 3 robot fuses the reading from its various sensors in order to produce a dead reckoning estimate of its pose on the <code>odom</code> topic. This topic publishes at 20 Hz.</p>"},{"location":"api/odometry/#the-slip_status-topic","title":"The <code>slip_status</code> topic","text":"<p>The <code>slip_status</code> topic produces messages of type <code>irobot_create_msgs/msg/SlipStatus</code>. We denote by \"slippage\" a loss of efficiency in the wheels. This is usually caused by losing traction between the wheels and the ground with the results that the motion detected by the wheels encoders is greater than what the robot actually performed.</p> <p>We fuse together various sensors in order to compute a boolean estimate of whether the robot is slipping or not and we periodically publish it on the <code>slip_status</code> topic. If you are developing your own state estimation algorithm using the wheels encoders, then it is recommended to inflate the differential motion covariance matrix to take this problem into account.</p> <p>Note that the optical mouse sensor is not affected by slippage. This topic publishes at 20 Hz.</p>"},{"location":"api/odometry/#the-stop_status-topic","title":"The <code>stop_status</code> topic","text":"<p>The <code>stop_status</code> topic produces messages of type <code>irobot_create_msgs/msg/StopStatus</code>. The Create\u00ae 3 robot will periodically publish a boolean estimate of whether it is currently moving or not on the <code>stop_status</code> topic. This topic publishes at 1 Hz.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/reflexes/","title":"Reflexes","text":"<p>With the word \"reflex\" we denote a set of autonomous reactive behaviors that the Create\u00ae 3 robot will trigger when it detects obstacles or hazards.</p> <p>Reflexes are high-priority behaviors and will temporarily override any user-provided command for their short duration.</p> <p>Reflexes can be enabled or disabled on the Create\u00ae 3 using the corresponding ROS 21 parameters exposed by the <code>motion_control</code> ROS 2 node.</p>"},{"location":"api/reflexes/#reflex-parameters","title":"Reflex parameters","text":"<p>The <code>reflexes_enabled</code> parameter controls whether reflexes should be executed or not. It accepts boolean values. When this parameter is set to <code>false</code>, no reflexes will be enabled, regardless of their specific parameters values.</p> <p>This parameter is set to true by default, so reflexes are generally enabled, but note that individual reflexes can be enabled or disabled via their specific parameters described below.</p>"},{"location":"api/reflexes/#bumps-reflex","title":"Bumps reflex","text":"<p>The <code>reflexes.REFLEX_BUMP</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the bump reflex. It will trigger as soon as the robot bumps into an obstacle and it will move the robot away from it. The reflex will continue until the robot has cleared the bump.</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#cliffs-reflex","title":"Cliffs reflex","text":"<p>The <code>reflexes.REFLEX_CLIFF</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the cliff reflex. It will trigger as soon as the robot detects a cliff and it will move the robot away from it. The reflex will continue until the robot has cleared the cliff.</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#dock-avoidance-reflex","title":"Dock avoidance reflex","text":"<p>The <code>reflexes.REFLEX_DOCK_AVOID</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the dock avoidance reflex. It will trigger as soon as the robot gets close to the dock and tries to move towards it. The reflex will stop forward movements.</p> <p>This reflex is disabled by default.</p>"},{"location":"api/reflexes/#gyro-calibration-reflex","title":"Gyro calibration reflex","text":"<p>The <code>reflexes.REFLEX_GYRO_CAL</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the gyro calibration reflex. It will trigger while the robot is stationary and will try to recalibrate the internal gyroscope.</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#panic-reflex","title":"Panic reflex","text":"<p>The <code>reflexes.REFLEX_PANIC</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the panic reflex. It will trigger when the robot is trapped and unable to clear obstacles or hazards. The reflex will try more aggressive maneuvers to allow the robot to recover from this situation</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#proximity-slowdown-reflex","title":"Proximity slowdown reflex","text":"<p>The <code>reflexes.REFLEX_PROXIMITY_SLOWDOWN</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the proximity slowdown reflex. It will trigger when the robot's IR sensors detect an obstacle in close proximity. The reflex will reduce the robot movement speed in order to better prepare for an eventual impact.</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#stuck-reflex","title":"Stuck reflex","text":"<p>The <code>reflexes.REFLEX_STUCK</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the stuck reflex. It will trigger when the robot is stuck, i.e. it's pushing against an obstacle and its wheels are losing traction. The reflex will try aggressive maneuvers to allow the robot to recover from this situation</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#virtual-wall-reflex","title":"Virtual Wall reflex","text":"<p>The <code>reflexes.REFLEX_VIRTUAL_WALL</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the virtual wall reflex. It will trigger as soon as the robot detects an iRobot virtual wall it will move the robot away from it. The reflex will continue until the robot has cleared the virtual wall.</p> <p>This reflex is enabled by default.</p>"},{"location":"api/reflexes/#wheel-drop-reflex","title":"Wheel drop reflex","text":"<p>The <code>reflexes.REFLEX_WHEEL_DROP</code> ROS 2 parameter enables (<code>true</code>) or disables (<code>false</code>) the wheel drop reflex. It will trigger as soon as the robot detects that one of its wheels is fully extended (dropped). The robot will drive the other wheel in order to return to a flat surface.</p> <p>This reflex is enabled by default.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/ros2/","title":"ROS 2 APIs","text":"<p>The Create\u00ae 3 robot is based on ROS 21 and, as such, it exposes all its user-facing APIs through ROS 2 entities (topics, services, actions and parameters).</p> <p>The purpose of this page is to give a quick overview of these ROS 2 APIs. The robot uses standard ROS 2 messages when available and implements custom messages in irobot_create_msgs for data not represented by standard messages. If you are interested in more details, have a look at the other pages in this section.</p>"},{"location":"api/ros2/#ros-2-topics","title":"ROS 2 Topics","text":"<p>You can see the ROS 2 topics exposed by the Create\u00ae 3 robot running the <code>ros2 topic list</code> command.</p> <pre><code>$ ros2 topic list -t\n/battery_state [sensor_msgs/msg/BatteryState]\n/cmd_audio [irobot_create_msgs/msg/AudioNoteVector]\n/cmd_lightring [irobot_create_msgs/msg/LightringLeds]\n/cmd_vel [geometry_msgs/msg/Twist]\n/dock [irobot_create_msgs/msg/Dock]\n/hazard_detection [irobot_create_msgs/msg/HazardDetectionVector]\n/imu [sensor_msgs/msg/Imu]\n/interface_buttons [irobot_create_msgs/msg/InterfaceButtons]\n/ir_intensity [irobot_create_msgs/msg/IrIntensityVector]\n/ir_opcode [irobot_create_msgs/msg/IrOpcode]\n/kidnap_status [irobot_create_msgs/msg/KidnapStatus]\n/mouse [irobot_create_msgs/msg/Mouse]\n/odom [nav_msgs/msg/Odometry]\n/parameter_events [rcl_interfaces/msg/ParameterEvent]\n/rosout [rcl_interfaces/msg/Log]\n/slip_status [irobot_create_msgs/msg/SlipStatus]\n/stop_status [irobot_create_msgs/msg/StopStatus]\n/tf [tf2_msgs/msg/TFMessage]\n/tf_static [tf2_msgs/msg/TFMessage]\n/wheel_status [irobot_create_msgs/msg/WheelStatus]\n/wheel_ticks [irobot_create_msgs/msg/WheelTicks]\n/wheel_vels [irobot_create_msgs/msg/WheelVels]\n</code></pre> <p>Note that the Create\u00ae 3 robot will produce data on most of these topics. On the other hand, some of them can be used by the user to send commands to the Create\u00ae 3 robot. In particular, the Create\u00ae 3 robot will subscribe to the following topics:</p> <ul> <li><code>/cmd_audio</code>: use this topic to play specified notes from the robot speaker.</li> <li><code>/cmd_lightring</code>: use this topic to change the color of the light ring.</li> <li><code>/cmd_vel</code>: use this topic to command velocities in the robot reference frame.</li> </ul> <p>For more details on the content of these topics, please have a look at their corresponding sections.</p> <ul> <li>Hazards</li> <li>Odometry</li> <li>User Interface</li> </ul> <p>If you have trouble seeing the topics using <code>ros2 topic list</code>, ensure that the robot's <code>RMW_IMPLEMENTATION</code> matches the one on your machine; see Network Configuration for more information about ROS middleware (RMW). Additionally, the command line <code>ros2 topic</code> utility could use stale cached discovery information; try running it with additional arguments <code>ros2 topic list --no-daemon --spin-time 10</code> to not use the cached information.</p>"},{"location":"api/ros2/#ros-2-services","title":"ROS 2 Services","text":"<p>You can see the ROS 2 servers exposed by the Create\u00ae 3 robot running the <code>ros2 service list</code> command.</p> <pre><code>$ ros2 service list -t\n/e_stop [irobot_create_msgs/srv/EStop]\n/motion_control/describe_parameters [rcl_interfaces/srv/DescribeParameters]\n/motion_control/get_parameter_types [rcl_interfaces/srv/GetParameterTypes]\n/motion_control/get_parameters [rcl_interfaces/srv/GetParameters]\n/motion_control/list_parameters [rcl_interfaces/srv/ListParameters]\n/motion_control/set_parameters [rcl_interfaces/srv/SetParameters]\n/motion_control/set_parameters_atomically [rcl_interfaces/srv/SetParametersAtomically]\n/robot_power [irobot_create_msgs/srv/RobotPower]\n/robot_state/change_state [lifecycle_msgs/srv/ChangeState]\n/robot_state/get_available_states [lifecycle_msgs/srv/GetAvailableStates]\n/robot_state/get_available_transitions [lifecycle_msgs/srv/GetAvailableTransitions]\n/robot_state/get_state [lifecycle_msgs/srv/GetState]\n/robot_state/get_transition_graph [lifecycle_msgs/srv/GetAvailableTransitions]\n/static_transform/change_state [lifecycle_msgs/srv/ChangeState]\n/static_transform/describe_parameters [rcl_interfaces/srv/DescribeParameters]\n/static_transform/get_available_states [lifecycle_msgs/srv/GetAvailableStates]\n/static_transform/get_available_transitions [lifecycle_msgs/srv/GetAvailableTransitions]\n/static_transform/get_parameter_types [rcl_interfaces/srv/GetParameterTypes]\n/static_transform/get_parameters [rcl_interfaces/srv/GetParameters]\n/static_transform/get_state [lifecycle_msgs/srv/GetState]\n/static_transform/get_transition_graph [lifecycle_msgs/srv/GetAvailableTransitions]\n/static_transform/list_parameters [rcl_interfaces/srv/ListParameters]\n/static_transform/set_parameters [rcl_interfaces/srv/SetParameters]\n/static_transform/set_parameters_atomically [rcl_interfaces/srv/SetParametersAtomically]\n</code></pre>"},{"location":"api/ros2/#ros-2-actions","title":"ROS 2 Actions","text":"<p>You can see the ROS 2 action servers exposed by the Create\u00ae 3 robot running the <code>ros2 action list</code> command.</p> <pre><code>$ ros2 action list -t\n/audio_note_sequence [irobot_create_msgs/action/AudioNoteSequence]\n/dock [irobot_create_msgs/action/DockServo]\n/drive_arc [irobot_create_msgs/action/DriveArc]\n/drive_distance [irobot_create_msgs/action/DriveDistance]\n/led_animation [irobot_create_msgs/action/LedAnimation]\n/navigate_to_position [irobot_create_msgs/action/NavigateToPosition]\n/rotate_angle [irobot_create_msgs/action/RotateAngle]\n/undock [irobot_create_msgs/action/Undock]\n/wall_follow [irobot_create_msgs/action/WallFollow]\n</code></pre> <p>For more details on how to use these actions, please have a look at their corresponding sections.</p> <ul> <li>Docking</li> <li>Drive Goals</li> </ul>"},{"location":"api/ros2/#ros-2-parameters","title":"ROS 2 Parameters","text":"<p>You can see the ROS 2 parameters exposed by the Create\u00ae 3 robot running the <code>ros2 param list</code> command.</p> <pre><code>$ ros2 param list\n/motion_control:\n  max_speed\n  min_speed\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  reflexes.REFLEX_BUMP\n  reflexes.REFLEX_CLIFF\n  reflexes.REFLEX_DOCK_AVOID\n  reflexes.REFLEX_GYRO_CAL\n  reflexes.REFLEX_PANIC\n  reflexes.REFLEX_PROXIMITY_SLOWDOWN\n  reflexes.REFLEX_STUCK\n  reflexes.REFLEX_VIRTUAL_WALL\n  reflexes.REFLEX_WHEEL_DROP\n  reflexes_enabled\n  safety_override\n  use_sim_time\n  wheel_accel_limit\n/robot_state:\n  publish_odom_tfs\n  qos_overrides./tf.publisher.depth\n  qos_overrides./tf.publisher.durability\n  qos_overrides./tf.publisher.history\n  qos_overrides./tf.publisher.reliability\n  use_sim_time\n/static_transform:\n  qos_overrides./tf_static.publisher.depth\n  qos_overrides./tf_static.publisher.history\n  qos_overrides./tf_static.publisher.reliability\n  use_sim_time\n  wheel_base\n  wheels_encoder_resolution\n  wheels_radius\n/system_health:\n  log_period\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  use_sim_time\n/ui_mgr:\n  lightring_led_brightness\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  use_sim_time\n</code></pre> <ul> <li>Morphology parameters such as <code>wheel_base</code> and <code>wheels_encoder_resolution</code> are read-only parameters that can be used in order to implement your estimation or motion control algorithms.</li> <li>The <code>safety_override</code> parameter allows user to enable/disable safety features (default: none). For more details, please have a look at the safety documentation.</li> <li>The <code>publish_odom_tfs</code> parameter allows the user to enable transformations from <code>odom</code> (boolean, default: true).    This parameter cannot be set at runtime; it must be configured from the ROS 2 parameters file on the application configuration page of the webserver, as it is loaded only at application start.</li> <li>The <code>wheel_accel_limit</code> parameter sets acceleration limits in units of mm\u00b7s-2 (int between 1 and 900 inclusive, default: 900).</li> <li>The <code>lightring_led_brightness</code> parameter allows user to increase/decrease the brightness of the light ring (int between 10 - 100 inclusive, default: 15).</li> </ul> <p>For more details on how to use and configure reflexes, please have a look at the reflexes documentation.</p>"},{"location":"api/ros2/#ros-2-coordinate-system","title":"ROS 2 Coordinate System","text":"<p>The Create\u00ae 3 robot produces a fused odometry that combines its wheel encoders, IMU, and ground optical flow sensor. The robot's coordinate system is right-handed, with x forward, y left, and z up. It exposes this coordinate system both through the tf tree and the <code>/odom</code> publication. The <code>/tf</code> tree from the robot exposes ROS 2 standard transforms <code>odom-&gt;base_footprint</code> and <code>odom-&gt;base_link</code> with corresponding definitions odom, base_footprint, and base_link. <code>base_link</code> is defined to be at the center of rotation of the robot with z height intersecting the floor. <code>base_footprint</code> is the 2D planar representation <code>base_link</code> with the pitch and roll factors removed from the transform, this can be useful for applications like 2D planar mapping. The <code>/odom</code> publication contains the same position and orientation as <code>base_link</code> in the form of a <code>nav_msgs/msg/Odometry</code> message with velocity additionally populated. Note: the <code>/odom</code> -&gt; <code>/base_footprint</code> and <code>/odom</code> -&gt; <code>base_link</code> transformations can be disabled by setting the <code>publish_odom_tfs</code> parameter to <code>false</code>. The <code>publish_odom_tfs</code> parameter cannot be set at runtime; it must be configured from the ROS 2 parameters file on the application configuration page of the webserver, as it is loaded only at application start.</p> <pre><code>$ ros2 topic echo /tf\ntransforms:\n- header:\n    stamp:\n      sec: 1646697192\n      nanosec: 702756640\n    frame_id: odom\n  child_frame_id: base_footprint\n  transform:\n    translation:\n      x: -0.00043813258525915444\n      y: -3.853919679386308e-06\n      z: 0.0\n    rotation:\n      x: 0.0\n      y: 0.0\n      z: 2.5629995434428565e-05\n      w: 1.0\n- header:\n    stamp:\n      sec: 1646697192\n      nanosec: 702756640\n    frame_id: odom\n  child_frame_id: base_link\n  transform:\n    translation:\n      x: -0.00043813258525915444\n      y: -3.853919679386308e-06\n      z: 0.0\n    rotation:\n      x: -0.0016827837098389864\n      y: -0.009617267176508904\n      z: 9.441922884434462e-06\n      w: 0.9999523162841797\n</code></pre> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/safety/","title":"Create\u00ae 3 Safety Overrides","text":"<p>By default, the Create\u00ae 3 robot has some safety features enabled. Their purpose is to make sure that the robot does not get into dangerous sitations and it is able to detect and react properly to cliff hazards.</p> <p>Safety features are configurable by the user through a ROS 21 parameter. This will allow more adventurous users to have full control over the robot.</p> <p>Important</p> <p>The robot will temporarily re-enable all safety features whenever it is commanded to execute any of the built-in autonomous behaviors.</p> <p>The <code>safety_override</code> parameter exposed by the <code>motion_control</code> ROS 2 node should be used to control and override safety features. It's a <code>string</code> parameter and it accepts 3 possible values:</p> <ul> <li><code>none</code> Safety features are fully enabled. This is the default value.</li> <li><code>backup_only</code> Overrides the robot backup limit safety feature, disabling it.</li> <li><code>full</code> Safety features are fully disabled.</li> </ul> <p>For example, in order to completely disable safety mechanisms:</p> <pre><code>ros2 param set /motion_control safety_override full\n</code></pre> <p>Note that the parameter server will reject changes if there are typos in the new safety value set by the users.</p> <p>The following sections briefly describe what the safety features do.</p>"},{"location":"api/safety/#backup-limit","title":"Backup Limit","text":"<p>Attention</p> <p>If you disable the backup limit, the robot will not stop if there are cliffs while driving backward!</p> <p>The Create\u00ae 3 robot is equipped with cliff sensors, but they are located only in the front of the robot. This means that the robot is not able to detect cliff hazards while driving backward.</p> <p>In order to make the robot safe, the robot's default policy is to never move backward further than what would be safe should there be a cliff directly behind the robot. Under standard circumstances, the robot is allowed to briefly move backward only if it has first traveled forward (i.e. if it has \"explored\" the space making sure that it does not present cliff hazards).</p> <p>If the robot is kidnapped (i.e. first lifted by the user and then placed somewhere), the backup limit will immediately trigger.</p> <p>The Create\u00ae 3 robot signals to the user when the backup limit is about to be triggered in multiple ways:</p> <ul> <li>Through the <code>HazardDetectionsVector</code> ROS 2 message: an hazard of type <code>BACKUP_LIMIT</code> will be published in the vector.</li> <li>By logging a warning message.</li> <li>By changing the color of the lights to orange.</li> </ul> <p>If the user ignores these alerts and keeps driving the robot backward, the robot will suddenly brake and come to a stop. From this point, the robot will refuse any backward movement. The user will have to drive the robot forward in order to re-enable backward movements. As soon as the user drives the robot forward, the lights will go back to the default white color. Safe backward movements will not be immediately re-allowed, but rather the robot will have to keep driving forward for a little while. This moment will be identified by the <code>BACKUP_LIMIT</code> hazard disappearing from the <code>HazardDetectionsVector</code> message.</p> <p>The backup limit and its related alerts are active only when <code>safety_override = none</code>.</p>"},{"location":"api/safety/#maximum-speed","title":"Maximum speed","text":"<p>Attention</p> <p>If you increase the speed above the default one, the robot may not be able to stop in time when a cliff is detected!</p> <p>In order to stop when a cliff hazard is detected, it is also necessary to make sure that the robot is not driving too fast. Safety features will thus limit the robot speed.</p> <p>You can check the current maximum robot speed through the read-only parameter <code>max_speed</code> exposed by the <code>motion_control</code> ROS 2 node.</p> <p>When <code>safety_override = none</code> or <code>safety_override = backup_only</code> the maximum speed will be limited to 0.306 m/s.</p> <p>By fully disabling safety features, i.e. setting <code>safety_override = full</code> the robot will be allowed to drive at its true maximum speed of 0.460 m/s.</p>"},{"location":"api/safety/#acceleration-limits","title":"Acceleration Limits","text":"<p>The robot exposes its commanding acceleration limits through the <code>wheel_accel_limit</code> parameter on the <code>motion_control</code> node. The velocity commands sent to the wheels will be ramped with the acceleration profile associated with this value. The value defaults to its maximum settable <code>900 mm/s^2</code>.  If using heavier payloads, it is advisable to decrease acceleration limits.</p>"},{"location":"api/safety/#e-stop","title":"E-Stop","text":"<p>The robot exposes a service with name <code>e_stop</code> that when sent <code>e_stop_on</code> true will turn off the robot's wheels. The robot will not respond to velocity commands when <code>e_stop_on</code> is true. See EStop.srv</p> <p>For example, in order to enable the E-Stop:</p> <pre><code>ros2 service call /e_stop irobot_create_msgs/srv/EStop \"{e_stop_on: true}\"\n</code></pre>"},{"location":"api/safety/#wheel-status","title":"Wheel Status","text":"<p>There is a <code>wheel_status</code> topic which publishes WheelStatus.msg exposing whether the wheels are enabled (disabled if E-Stop is engaged) and the present PWM duty cycle and current through each wheel.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/ui/","title":"User Interface","text":"<p>The Create\u00ae 3 robot can interact with the user through its buttons and its light ring.</p>"},{"location":"api/ui/#responding-to-button-presses","title":"Responding to button presses","text":"<p>Whenever a button on the Create\u00ae 3 robot is pressed, its information will be published on the <code>interface_buttons</code> topic. By subscribing to this topic, you will be able to detect when to start your custom policies.</p>"},{"location":"api/ui/#changing-the-light-ring-colors","title":"Changing the light ring colors","text":"<p>Attention</p> <p>The Create\u00ae 3 robot uses its light ring to notify the user about critical events. If you override its color, you may not notice these events.</p> <p>You can change the color of the light ring on your Create\u00ae 3 robot by publishing a corresponding message on the <code>cmd_lightring</code> topic.</p> <pre><code>ros2 topic pub /cmd_lightring irobot_create_msgs/msg/LightringLeds \"{override_system: true, leds: [{red: 255, green: 0, blue: 0}, {red: 0, green: 255, blue: 0}, {red: 0, green: 0, blue: 255}, {red: 255, green: 255, blue: 0}, {red: 255, green: 0, blue: 255}, {red: 0, green: 255, blue: 255}]}\"\n</code></pre> <p>The easiest way to return lights to the default color (and relinquish their control to the robot) is to publish an empty message on the topic.</p> <pre><code>ros2 topic pub /cmd_lightring irobot_create_msgs/msg/LightringLeds \"{}\"\n</code></pre> <p>Additionally, an action server named <code>led_animation</code> can take Blink or Spin animation goals to execute a pattern for a fixed duration. See LedAnimation.action.</p> <p>For example you can run the following:</p> <pre><code>ros2 action send_goal led_animation irobot_create_msgs/action/LedAnimation \"{animation_type: 1, lightring: {leds: [{red: 255, green: 0, blue: 0}, {red: 0, green: 255, blue: 0}, {red: 0, green: 0, blue: 255}, {red: 255, green: 255, blue: 0}, {red: 255, green: 0, blue: 255}, {red: 0, green: 255, blue: 255}], override_system: true},max_runtime: {sec: 500, nanosec: 0}}\"\n</code></pre>"},{"location":"api/ui/#playing-sound-through-the-speakers","title":"Playing sound through the speakers","text":"<p>You can play sound out of your Create\u00ae 3 robot speakers by publishing a corresponding message on the <code>cmd_audio</code> topic.</p> <p>Important</p> <p>A <code>best-effort</code> publisher will not be able to communicate with this subscription as of G.4.4 / H.1.1 as its QOS has been changed to <code>reliable</code> from <code>best-effort</code>. See this compatibilty matrix for details.</p> <pre><code>ros2 topic pub --once /cmd_audio irobot_create_msgs/msg/AudioNoteVector \"{append: false, notes: [{frequency: 100, max_runtime: {sec: 1,nanosec: 0}}, {frequency: 50, max_runtime: {sec: 1,nanosec: 0}}]}\"\n</code></pre> <p>This example command will play 2 notes at the given frequencies back to back with the given 1 second length for each note.</p> <p><code>append</code> is used to dictate the policy if an audio sequence is already playing when a new value comes in on the topic.</p> <ul> <li><code>append: true</code> tells the sound manager to play this audio sequence after the current sequence finishes playing.</li> <li><code>append: false</code> tell the sound manager to override any currently playing sequence with the new sequence.</li> </ul> <p>Publishing an empty <code>notes</code> vector with <code>append: false</code> will stop any currently playing audio sequences.</p> <p>Additionally, an action server named <code>audio_note_sequence</code> can take an AudioNoteVector and a number of iterations to play it. See AudioNoteSequence.action.</p> <p>The action goal will succeed when the sequence has finished playing so you can coordinate audio runtime with other actions. If you set iterations to -1, it will play until it is canceled.</p> <p>For example you can run the following:</p> <pre><code>ros2 action send_goal /audio_note_sequence irobot_create_msgs/action/AudioNoteSequence \"{iterations: 3,note_sequence:{append: false, notes: [{frequency: 100, max_runtime: {sec: 1,nanosec: 0}}, {frequency: 50, max_runtime: {sec: 1,nanosec: 0}}]}}\"\n</code></pre> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"api/wall-follow/","title":"Create\u00ae 3 Wall Follow","text":"<p>The Create\u00ae 3 robot exposes a ROS 21 action server to invoke a wall-following behavior.</p> <p>You can command the robot to follow along an obstacle using the following ROS 2 action.</p> <pre><code>ros2 action send_goal /wall_follow irobot_create_msgs/action/WallFollow \"{follow_side: 1, max_runtime: {sec: 1, nanosec: 0}}\"\n</code></pre> <p>When this behavior is requested, the robot will try to engage with nearby obstacles and, after a successful engagement, it will start following the obstacle along the specified side until the maximum runtime is reached.</p> <p>The <code>follow_side</code> can be specified as left (1) or right (-1) see the action interface for the implementation.</p> <p>The robot will use a spiraling motion to try to engage with the obstacles. The spiral will be clockwise if <code>follow_side</code> is left (1) or counter-clockwise if <code>follow_side</code> is right (-1).</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"examples/actuators-cli/","title":"Actuators via ROS 2 Command Line","text":"<p>This page describes how to use the the Create\u00ae 3 robot's actuators using the ROS 21 command line tools.</p>"},{"location":"examples/actuators-cli/#audio","title":"Audio","text":""},{"location":"examples/actuators-cli/#play-a-sequence-of-notes","title":"Play a sequence of notes","text":"<p>Play a happy sequence once:</p> <pre><code>ros2 topic pub /cmd_audio irobot_create_msgs/msg/AudioNoteVector \"{append: false, notes: [{frequency: 392, max_runtime: {sec: 0,nanosec: 177500000}}, {frequency: 523, max_runtime: {sec: 0,nanosec: 355000000}}, {frequency: 587, max_runtime: {sec: 0,nanosec: 177500000}}, {frequency: 784, max_runtime: {sec: 0,nanosec: 533000000}}]}\" -1\n</code></pre> <p>Play a sad sequence once:</p> <pre><code>ros2 topic pub /cmd_audio irobot_create_msgs/msg/AudioNoteVector \"{append: false, notes: [{frequency: 369, max_runtime: {sec: 0,nanosec: 355000000}}, {frequency: 300, max_runtime: {sec: 0,nanosec: 533000000}}]}\" -1\n</code></pre> <p>Play a scary sequence forever:</p> <pre><code>ros2 action send_goal /audio_note_sequence irobot_create_msgs/action/AudioNoteSequence \"{iterations: -1, note_sequence: {append: false, notes: [{frequency: 82, max_runtime: {sec: 1,nanosec: 0}}, {frequency: 87, max_runtime: {sec: 1,nanosec: 0}}]}}\"\n</code></pre> <p>API documentation on the speakers can be found here.</p>"},{"location":"examples/actuators-cli/#driving","title":"Driving","text":""},{"location":"examples/actuators-cli/#command-velocities","title":"Command velocities","text":"<p>You can drive around the Create\u00ae 3 robot by publishing standard <code>Twist</code> messages on the <code>/cmd_vel</code> topic.</p> <pre><code>ros2 topic pub -r 20 /cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 0.2, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}\"\n</code></pre>"},{"location":"examples/actuators-cli/#drive-a-distance","title":"Drive a distance","text":"<p>The Drive Distance action takes a distance in meters and maximum speed in meters per second.</p> <pre><code>ros2 action send_goal /drive_distance irobot_create_msgs/action/DriveDistance \"{distance: 0.5,max_translation_speed: 0.15}\"\n</code></pre>"},{"location":"examples/actuators-cli/#rotate-an-angle","title":"Rotate an angle","text":"<p>The Rotate Angle action takes a turn angle in radians and maximum angular speed in radians per second.</p> <pre><code>ros2 action send_goal /rotate_angle irobot_create_msgs/action/RotateAngle \"{angle: 1.57,max_rotation_speed: 0.5}\"\n</code></pre>"},{"location":"examples/actuators-cli/#drive-an-arc","title":"Drive an arc","text":"<p>The Drive Arc action takes a arc angle in radians, arc radius in meters, translate direction (1 for forward and -1 for rearward) and and maximum translation speed in meters per second.</p> <pre><code>$ ros2 action send_goal /drive_arc irobot_create_msgs/action/DriveArc \"{angle: 1.57,radius: 0.3,translate_direction: 1,max_translation_speed: 0.3}\"\n</code></pre>"},{"location":"examples/actuators-cli/#wall-follow","title":"Wall Follow","text":"<p>The Wall Follow action takes a side (1=left, -1=right) and a maximum duration.</p> <pre><code>ros2 action send_goal /wall_follow irobot_create_msgs/action/WallFollow \"{follow_side: 1, max_runtime: {sec: 1, nanosec: 0}}\"\n</code></pre>"},{"location":"examples/actuators-cli/#navigate-to-position","title":"Navigate to position","text":"<p>The Navigate to Position action takes a goal position (in meters) and orientation (in radians). The orientation must be specified as part of the message, but it can be ignored by setting <code>achieve_goal_heading</code> to <code>false</code>.</p> <pre><code>$ ros2 action send_goal /navigate_to_position irobot_create_msgs/action/NavigateToPosition \"{achieve_goal_heading: true,goal_pose:{pose:{position:{x: 1,y: 0.2,z: 0.0}, orientation:{x: 0.0,y: 0.0, z: 0.0, w: 1.0}}}}\"\n</code></pre>"},{"location":"examples/actuators-cli/#docking","title":"Docking","text":""},{"location":"examples/actuators-cli/#undock-the-robot","title":"Undock the robot","text":"<p>If the Create\u00ae 3 robot is on its dock, you can undock it with the Undock action:</p> <pre><code>ros2 action send_goal /undock irobot_create_msgs/action/Undock \"{}\"\n</code></pre>"},{"location":"examples/actuators-cli/#dock-the-robot","title":"Dock the robot","text":"<p>If the Create\u00ae 3 robot sees its dock (check the docking documentation for details) you can dock it with:</p>"},{"location":"examples/actuators-cli/#galactic","title":"Galactic","text":"<pre><code>ros2 action send_goal /dock irobot_create_msgs/action/DockServo \"{}\"\n</code></pre>"},{"location":"examples/actuators-cli/#humble","title":"Humble","text":"<pre><code>ros2 action send_goal /dock irobot_create_msgs/action/Dock \"{}\"\n</code></pre>"},{"location":"examples/actuators-cli/#e-stop","title":"E-Stop","text":""},{"location":"examples/actuators-cli/#enable-e-stop","title":"Enable E-Stop","text":"<p>If under the robot's control, its light ring will turn yellow when the motors are disabled.</p> <pre><code>ros2 service call /e_stop irobot_create_msgs/srv/EStop \"{e_stop_on: true}\"\n</code></pre>"},{"location":"examples/actuators-cli/#disable-e-stop","title":"Disable E-Stop","text":"<pre><code>ros2 service call /e_stop irobot_create_msgs/srv/EStop \"{e_stop_on: false}\"\n</code></pre> <p>API documentation on the E-Stop is available here.</p>"},{"location":"examples/actuators-cli/#light-ring","title":"Light Ring","text":""},{"location":"examples/actuators-cli/#multicolor","title":"Multicolor","text":"<pre><code>ros2 topic pub /cmd_lightring irobot_create_msgs/msg/LightringLeds \"{override_system: true, leds: [{red: 255, green: 0, blue: 0}, {red: 0, green: 255, blue: 0}, {red: 0, green: 0, blue: 255}, {red: 255, green: 255, blue: 0}, {red: 255, green: 0, blue: 255}, {red: 0, green: 255, blue: 255}]}\" -1\n</code></pre>"},{"location":"examples/actuators-cli/#return-static-control-to-create-3-robot","title":"Return static control to Create 3 Robot","text":"<pre><code>ros2 topic pub /cmd_lightring irobot_create_msgs/msg/LightringLeds \"{override_system: false, leds: [{red: 255, green: 0, blue: 0}, {red: 0, green: 255, blue: 0}, {red: 0, green: 0, blue: 255}, {red: 255, green: 255, blue: 0}, {red: 255, green: 0, blue: 255}, {red: 0, green: 255, blue: 255}]}\" -1\n</code></pre>"},{"location":"examples/actuators-cli/#animations","title":"Animations","text":"<pre><code># Note: type 1 is blink and type 2 is spin\nros2 action send_goal /led_animation irobot_create_msgs/action/LedAnimation \"{animation_type: 2,max_runtime:{sec: 10,nanosec: 0},lightring:{override_system: true, leds: [{red: 255, green: 0, blue: 0}, {red: 0, green: 255, blue: 0}, {red: 0, green: 0, blue: 255}, {red: 255, green: 255, blue: 0}, {red: 255, green: 0, blue: 255}, {red: 0, green: 255, blue: 255}]}}\"\n</code></pre> <p>API documentation on the light ring can be found here.</p>"},{"location":"examples/actuators-cli/#robot-power","title":"Robot Power","text":"<p>Warning: this turns the robot and payload off immediately</p> <pre><code>ros2 service call /robot_power irobot_create_msgs/srv/RobotPower \"{}\"\n</code></pre> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"examples/create3_examples/","title":"iRobot\u00ae Create\u00ae 3 Examples","text":"<p>The create3_examples Github repository contains examples of C++ and Python applications that can be used to control a Create\u00ae 3 robot with ROS 21 and develop your navigation application.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"examples/driving-cli/","title":"Driving cli","text":"<p>This page has been moved.</p>"},{"location":"examples/sensors-cli/","title":"Sensors via ROS 2 Command Line","text":"<p>This page describes how to read the the Create\u00ae 3 robot's sensors using the ROS 21 command line tools.</p>"},{"location":"examples/sensors-cli/#overview","title":"Overview","text":"<p>Reading the robot's sensors is as simple as</p> <pre><code>ros2 topic echo {topic}\n</code></pre> <p>where {topic} is the topic of interest. If you're not sure what topics are available, you can type</p> <pre><code>ros2 topic list --no-daemon --spin-time 10\n</code></pre> <p>The --no-daemon and --spin-time arguments are not strictly necessary, but they may help with initial discovery.</p> <p>A detailed API description for each sensor can be found here.</p>"},{"location":"examples/sensors-cli/#a-non-exhaustive-set-of-examples","title":"A non-exhaustive set of examples","text":"<p>These are relatively straighforward, but for fun:</p>"},{"location":"examples/sensors-cli/#battery-state","title":"Battery State","text":"<pre><code>ros2 topic echo /battery_state\n</code></pre>"},{"location":"examples/sensors-cli/#buttons","title":"Buttons","text":"<pre><code>ros2 topic echo /interface_buttons\n</code></pre>"},{"location":"examples/sensors-cli/#docking-state","title":"Docking State","text":""},{"location":"examples/sensors-cli/#galactic","title":"Galactic","text":"<pre><code>ros2 topic echo /dock\n</code></pre>"},{"location":"examples/sensors-cli/#humble","title":"Humble","text":"<pre><code>ros2 topic echo /dock_status\n</code></pre>"},{"location":"examples/sensors-cli/#ir-docking-sensor","title":"IR Docking Sensor","text":"<pre><code>ros2 topic echo /ir_opcode\n</code></pre>"},{"location":"examples/sensors-cli/#ir-proximity-sensors","title":"IR Proximity Sensors","text":"<pre><code>ros2 topic echo /ir_intensity\n</code></pre>"},{"location":"examples/sensors-cli/#wheel-odometry","title":"Wheel Odometry","text":"<pre><code>ros2 topic echo /odom\n</code></pre>"},{"location":"examples/sensors-cli/#wheel-status-includes-pwm-and-current","title":"Wheel Status (includes PWM and current)","text":"<pre><code>ros2 topic echo /wheel_status\n</code></pre> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/adapter/","title":"iRobot\u00ae Create\u00ae 3 Adapter Board","text":""},{"location":"hw/adapter/#overview","title":"Overview","text":"<p>The iRobot\u00ae Create\u00ae 3 robot1 has two electrical connections exposed via the Adapter Board. The connections are accessible within the robot once the cargo bay is removed. The Adapter Board is also visible through the top cover of the robot, where its indicators are visible, and the USB/BLE toggle can be switched.</p> <p></p>"},{"location":"hw/adapter/#power-connections","title":"Power Connections","text":""},{"location":"hw/adapter/#unregulated-battery-port","title":"Unregulated Battery Port","text":"<p>The unregulated battery port is a JST XH-style connector, with pin 1 as the positive terminal of the battery, and pin 2 as the negative terminal. These terminals are labeled on the bottom side of the board and are visible with the robot on its back and the cargo bay removed. The board is capable of supplying a maximum of 2 A of current at the current battery voltage (14.4 V nominal, 12 V min, 16.8 V max), enforced by a PTC resettable fuse in the robot. This port is always on when the battery is powered on.</p> <p>Notice</p> <p>Do not back-feed power into the robot through this port, and do not attempt to use the robot without its battery installed.</p>"},{"location":"hw/adapter/#usb-c-connector","title":"USB-C\u00ae Connector","text":"<p>The USB-C\u00ae connector2 provides a USB 2.0 Host connection into the robot with 5.13 V at 3.0 A provided to power downstream connections. The power is disabled on this port unless a proper USB-C\u00ae downstream device is connected. The 5 V source powering this port is not guaranteed to stay enabled when the battery reports 0% state of charge (below 12.0 V). The USB data connection is made only when the USB/BLE toggle switch plunger is slid toward the USB icon.</p>"},{"location":"hw/adapter/#total-power-output","title":"Total Power Output","text":"<p>The USB-C\u00ae port draws its power from the unregulated battery connection which, as mentioned above, is limited to 2 A at the battery voltage. This means there is only around 28.8 W total power shared between both power outputs (assuming the battery is at 14.4 V). If power is drawn through the USB-C\u00ae connector, then less power is available through the unregulated battery port and vice versa.</p> <p>Example</p> <p>As an example, if a full 5 V @ 3 A are drawn from the USB-C\u00ae port, the battery is currently measuring 14.4 V, and the switching regulator is 90% efficient, then a maximum of 0.84 A3 can be drawn from the unregulated battery port before the resettable fuse will trip (and depending on ambient temperature, even more margin may be necessary).</p>"},{"location":"hw/adapter/#usbble-toggle","title":"USB/BLE Toggle","text":"<p>The USB/BLE toggle routes the robot's single USB Host connection either to the USB-C\u00ae port (useful for connecting to single-board computers with OTG or device ports) or to the on-board Bluetooth\u00ae Low Energy4 module. This module can be used to interact with the iRobot Education Python Web Playground or iRobot Coding app.</p>"},{"location":"hw/adapter/#indicators","title":"Indicators","text":""},{"location":"hw/adapter/#orange-indicator","title":"Orange Indicator","text":"<p>The orange indicator (D3) is illuminated when the USB-C\u00ae port is powering a downstream device, whether or not a data connection is being made.</p>"},{"location":"hw/adapter/#yellow-indicator","title":"Yellow Indicator","text":"<p>The yellow indicator (D2) is illuminated when the robot's internal 5 V bus is enabled. There is a hardware error if this LED is extinguished while the green indicator is illuminated.</p>"},{"location":"hw/adapter/#green-indicator","title":"Green Indicator","text":"<p>The green indicator (D300) is illuminated when the robot's battery is switched on.</p>"},{"location":"hw/adapter/#blue-indicator","title":"Blue Indicator","text":"<p>The blue indicator (D6) is illuminated when the BLE radio is turned on. It flashes when it is connected to a host.</p> <ol> <li> <p>iRobot\u00ae and Create\u00ae are registered trademarks of iRobot Corporation.\u00a0\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>Maximum current computed as: 2 A - (5 V * 3 A / 0.90 / 14.4 V) = 0.84 A\u00a0\u21a9</p> </li> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/electrical/","title":"iRobot\u00ae Create\u00ae 3 Electrical System","text":""},{"location":"hw/electrical/#robot-battery","title":"Robot Battery","text":"<p>The iRobot\u00ae Create\u00ae 3 robot uses a standard Lithium Ion Battery for Roomba\u00ae e &amp; i series robots. The battery shipping with the robot is a 26 Wh, 4S Lithium Ion smart battery pack, with a nominal voltage of 14.4 V (12 V min, 16.8 V max). It will report a 0% state of charge when the total voltage of the pack reaches 12.0 V. It will self-protect and disconnect from any load at 10.8 V or lower.</p> <p>Notice</p> <p>If the robot is approaching a 0% state of charge and the application does not believe it will make it to the dock, the robot should be powered down using the <code>/robot_power</code> service.</p> <p>If the battery self-protects, its internal management system may refuse to charge until it is reset. Resetting the battery is accomplished by removing the battery from the robot for at least fifteen minutes, at which point it should be reinstalled in the robot and the robot placed on the charger.</p> <p>Notice</p> <p>When not overridden, the robot's light ring will flash red to indicate low battery state, at about 10% state of charge. It is recommended not to run the robot for extended periods of time in this state.</p> <p>Charge the battery by placing Create\u00ae 3 on the included iRobot\u00ae Home Base\u2122 Charging Station. The light ring will show the state of charge and animate while the battery is charging.</p> <p>Notice</p> <p>Always remove the Create\u00ae 3 robot\u2019s battery prior to dismantling, adjusting, altering, or affecting the robot\u2019s chassis at the risk of damaging the battery, robot, or both. Do not attempt to use the robot without its battery installed.</p> <p>Tip</p> <p>Keep the robot on the Home Base\u2122 charging station (or power down the robot by holding down the power button for 10 seconds) when not in use to prevent the battery from discharging.</p>"},{"location":"hw/electrical/#buttons-and-light-ring-overview","title":"Buttons and Light Ring Overview","text":"<p>The iRobot\u00ae Create\u00ae 3 has three buttons on its top face. The center button is marked with a power icon, while the flanking buttons are marked with one or two dots. The center button also contains a ring of six RGB LEDs. Detailed information about the use of these buttons and LEDs can be found here.</p>"},{"location":"hw/electrical/#adapter-board-overview","title":"Adapter Board Overview","text":"<p>The iRobot\u00ae Create\u00ae 3 robot exposes connections and some status indicators via the Adapter Board. The Adapter Board also adds a Bluetooth\u00ae Low Energy1 interface to the core robot. Detailed information on the Adapter Board can be found here.</p> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/face/","title":"iRobot\u00ae Create\u00ae 3 Buttons and Light Ring","text":""},{"location":"hw/face/#buttons","title":"Buttons","text":"<p>The iRobot\u00ae Create\u00ae 3 has three buttons on its top face. These buttons expose core functionality of the robot, but can also be overridden by the user.</p>"},{"location":"hw/face/#button-1","title":"Button 1","text":"<p>Button 1 (to the left of center) is marked with a single dot (\u2022). If held for ten seconds, the robot will go into \"standby\" mode, keeping its charging circuitry active, and continuing to power the payload. The robot can be placed on the dock to charge or to keep the payload alive in this mode. To wake the robot from standby, hold the center button for one second. Button presses can be accessed by the user in both ROS 2 and iRobot Coding / Bluetooth1 modes.</p>"},{"location":"hw/face/#button-2","title":"Button 2","text":"<p>Button 2 (to the right of center) is marked with two dots (\u2022\u2022). This button is a user button only. Button presses can be accessed by the user in both ROS 2 and iRobot Coding / Bluetooth1 modes.</p>"},{"location":"hw/face/#center-button","title":"Center Button","text":"<p>The center button is marked with a power (\u23fb) icon. If held for seven seconds, the robot will go into \"storage mode,\" disconnecting its internal battery from the robot and its payload. When the robot is in storage mode, the only way to power it on is to place it on the dock. The button also contains a light ring on its circumference.</p>"},{"location":"hw/face/#light-ring","title":"Light Ring","text":"<p>The center button contains a ring of six RGB LEDs which communicate state about the robot. The LEDs expose internal state information about the robot, but can also be overridden by the user.</p>"},{"location":"hw/face/#while-charging","title":"While Charging","text":"Spinning White Partial White Solid White Pulsing Red Robot is booting up.Wait for \"happy sound\" to play. Robot is charging(Example shows 40%) Robot is 100% charged Battery &lt; 10%"},{"location":"hw/face/#while-idle","title":"While Idle","text":"Spinning White Solid White Pulsing Red Solid Red Robot is booting up.Wait for \"happy sound\" to play. Robot is powered on Battery &lt;10%. Place on charger. Robot error. Cycle power."},{"location":"hw/face/#while-connecting-to-robot-access-point","title":"While Connecting to Robot Access Point","text":"Spinning Cyan Solid Cyan Access Point is active.  Select robot from device\u2019s  Wi-Fi menu. Device is connected to  robot\u2019s Access Point page."},{"location":"hw/face/#while-connecting-to-wi-fi","title":"While Connecting to Wi-Fi","text":"Solid Cyan Spinning Cyan Quick Green Flash Solid White Device is connected to  robot\u2019s Access Point page. Robot attempting to  connect to Wi-Fi Success connecting to Wi-Fi Robot successfully  disconnected from  Access Point page Yellow with Red Yellow with Green Yellow with Blue Yellow with White Solid Yellow Failed Wi-Fi password Robot cannot connect to  network access point DHCP failed to obtain a valid  IP address before time-out.  Try again. Access point located but  failed association. Try again. Failed to connect to Wi-Fi  for unknown reason"},{"location":"hw/face/#while-updating-firmware","title":"While Updating Firmware","text":"Solid Cyan Spinning Blue Spinning White Solid White Device is connected to  robot\u2019s Access Point page. Robot downloading  update file Robot updating firmware  Do not remove from dock Update successful"},{"location":"hw/face/#while-operating","title":"While Operating","text":"Spinning White Solid White Pulsing Red Half Solid Orange Half Solid Yellow Robot is booting up.Wait for \"happy sound\" to play. Default light color Battery &lt;10%. Back-up safety activated Wheels disabled <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/hookup/","title":"iRobot\u00ae Create\u00ae 3 Hardware Hookup Overview","text":"<p>The Create\u00ae 3 robot is based on the Roomba\u00ae, a robot vacuum cleaner. Its sensors, actuators, and compact design are capable of navigating and mapping a the whole floor of a home or office space. The robot also ships with an iRobot\u00ae Home Base\u2122 Charging Station. </p> <p>It is possible to directly connect various single board computers to the Create 3 robot in order to provide on-board intelligence. Here are a few examples.</p>"},{"location":"hw/hookup/#currently-documented-hookup-examples","title":"Currently documented hookup examples:","text":""},{"location":"hw/hookup/#navq-by-nxp","title":"NavQ+ by NXP\u00ae","text":"<ul> <li>NavQ+ by NXP Hookup Guide</li> </ul>"},{"location":"hw/hookup/#nvidia-jetsontm","title":"NVIDIA\u00ae Jetson\u2122","text":"<ul> <li>NVIDIA\u00ae Jetson\u2122 Hookup Guide 1</li> </ul>"},{"location":"hw/hookup/#raspberry-pi","title":"Raspberry Pi\u00ae","text":"<ul> <li>Raspberry Pi\u00ae Hookup Guide 2</li> </ul> <ol> <li> <p>NVIDIA and Jetson are trademarks or registered trademarks of NVIDIA Corporation.\u00a0\u21a9</p> </li> <li> <p>Raspberry Pi\u00ae is a trademark of Raspberry Pi Trading.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/jetson_hookup/","title":"iRobot\u00ae Create\u00ae 3 Hookup Guide for NVIDIA\u00ae Jetson\u2122","text":"<p>Important</p> <p>This is community-submitted content. Please feel welcome to submit PRs for additions or corrections.</p> <p>The iRobot\u00ae Create\u00ae 3 robot has a JST XH-style connector on its internal Adapter Board which is capable of supplying a maximum of 2 A of current at the current battery voltage (14.4 V nominal).</p> <p>The iRobot\u00ae Create\u00ae 3 robot has a USB-C\u00ae1 connector implementing a USB 2.0 host capable of 5 V @ 3 A continuous, which can be used to power and communicate with various downstream devices.</p> <p>Here are some hookup examples for NVIDIA\u00ae Jetson\u21222 computers.</p>"},{"location":"hw/jetson_hookup/#nvidia-jetson-orin-nanotm-developer-kit","title":"NVIDIA\u00ae Jetson Orin Nano\u2122 Developer Kit","text":"<p>Note</p> <p>The Jetson Orin Nano\u2122 Developer Kit has a 5.5 mm x 2.5 mm barrel connector jack for power (9 V to 20 V) and a USB-C\u00ae port for upstream data. This can be powered from the unregulated battery port of the Create\u00ae 3 adapter board by using a JST-XH female connector to DC barrel plug cable.</p>"},{"location":"hw/jetson_hookup/#hookup-kit","title":"Hookup kit","text":"<p>Below lists the content of an example kit that enables mounting Jetson Orin Nano Developer Kit with some sensors like Intel\u00ae RealSense\u21223.</p> <ul> <li>Jetson Orin Nano Developer Kit</li> <li>Custom power cable (JST-XH to DC 5.5 mm x 2.5 mm plug)<ul> <li>DC power plug (5.5 mm x 2.5 mm)</li> </ul> </li> <li>USB data cable (USB-C\u00ae to USB-C\u00ae)</li> <li>Jetson NX-style developer kit mount (STL file)</li> <li>Sensor mount plate (STL file)</li> <li>M3 standoff/spacer x4</li> <li>M3 screws</li> </ul>"},{"location":"hw/jetson_hookup/#nvidia-jetson-xavier-nxtm-developer-kit","title":"NVIDIA\u00ae Jetson Xavier NX\u2122 Developer Kit","text":"<p>Note</p> <p>The Jetson Xavier NX\u2122 Developer Kit has a 5.5 mm x 2.5 mm barrel connector jack (J16) for power (9 V to 20 V) and a USB Micro B port (J5) for upstream data. This can be powered from the unregulated battery port of the Create\u00ae 3 adapter board by using a JST-XH female connector to DC barrel plug cable.</p> <p>The data connection is established by using a USB Micro B to USB-C\u00ae cable, which requires some software tweaking to allow the communication between the Create\u00ae 3 robot and Jetson. See this page.</p> <p></p>"},{"location":"hw/jetson_hookup/#hookup-kit_1","title":"Hookup kit","text":"<p>Below lists the content of an example kit that enables mounting Jetson Xavier NX Developer Kit with some sensors like Intel\u00ae RealSense\u21223.</p> <ul> <li>Jetson Xavier NX Developer Kit</li> <li>Custom power cable (JST-XH to DC 5.5 mm x 2.5 mm plug)<ul> <li>DC power plug (5.5 mm x 2.5 mm)</li> </ul> </li> <li>USB data cable (USB Micro B to USB-C\u00ae)</li> <li>Jetson Xavier Developer Kit mount (STL file)</li> <li>Sensor mount plate (STL file)</li> <li>M3 standoff/spacer x4</li> <li>M3 screws</li> </ul>"},{"location":"hw/jetson_hookup/#how-to-mount","title":"How to mount","text":""},{"location":"hw/jetson_hookup/#mount-bracket-for-nvidia-jetson-nx-style-developer-kits","title":"Mount bracket for NVIDIA\u00ae Jetson NX-style developer kits","text":"<p>A mount bracket can be used to mount either Jetson Orin Nano\u2122 Developer Kit or Jetson Xavier NX\u2122 Developer Kit on the Create\u00ae 3 faceplate or in the cargo bay..</p> <p>You can 3d print the mount bracket.</p> <p>Note</p> <ul> <li> <p>If you are 3d printing the above mount bracket, use support to support overhang areas.  Slicing example </p> </li> <li> <p>You need four (4) M3 x 6 mm screws; cap head is suggested.</p> </li> </ul>"},{"location":"hw/jetson_hookup/#printable-sensor-mount-plate","title":"Printable sensor mount plate","text":"<p>You can 3d-print the sensor mount plate.</p> <p>To fix the plate at a raised height, you can use M3 spacers like this to allow the sensor to have unobstructed view.</p>"},{"location":"hw/jetson_hookup/#nvidia-jetson-nanotm-2gb","title":"NVIDIA\u00ae Jetson Nano\u2122 2GB","text":"<p>The Jetson Nano\u2122 2GB has a USB-C\u00ae port (J2) for power and a USB Micro B port (J13) for downstream data. This can be connected to the Create 3 robot most simply using a USB-C\u00ae hub and two cables -- USB A to Micro B and USB A to USB-C\u00ae. </p> <ol> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>NVIDIA and Jetson are trademarks or registered trademarks of NVIDIA Corporation.\u00a0\u21a9</p> </li> <li> <p>Intel and RealSense are trademarks or registered trademarks of Intel Corporation.\u00a0\u21a9\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/mechanical/","title":"iRobot\u00ae Create\u00ae 3 Mechanical System","text":"<p>The Create\u00ae 3 is a differential drive robot designed for traversing relatively-flat, indoor environments. The drive wheels feature independent suspensions to help the robot overcome typical carpet or door thresholds.</p>"},{"location":"hw/mechanical/#payload","title":"Payload","text":"<p> Sensors or accessories can be attached to the faceplate or internal cargo bay, both of which feature a regular 12 mm grid of 3 mm diameter mounting holes. The maximum recommended payload weight (without changing acceleration limits) is 9 kg directly above the center of gravity of the chassis. The robot can handle more weight with reduced acceleration limits or careful management of the load.</p> <p>Notice</p> <p>To prevent damage to the robot or payload, ensure the faceplate and/or payload are well secured to the chassis before use.</p>"},{"location":"hw/mechanical/#removing-or-attaching-the-faceplate","title":"Removing or attaching the faceplate","text":"<p>The faceplate is removed by rotating it on the center axis of the robot using the thumb rests. Four locating pins on the top cover are used to install and retain the faceplate. </p> <p>Notice</p> <p>Always remove the Create\u00ae 3 robot\u2019s faceplate prior to dismantling, adjusting, altering, or affecting the faceplate at the risk of damaging the robot.</p>"},{"location":"hw/mechanical/#locking-the-faceplate","title":"Locking the faceplate","text":"<p>If you would like to lock the faceplate and prevent it from rotating, you may insert an M3 self-tapping screw or pin in the faceplate hole marked with the image of a screw (while the faceplate is attached). </p>"},{"location":"hw/mechanical/#attachment-tips-and-tricks","title":"Attachment Tips and Tricks","text":""},{"location":"hw/mechanical/#self-tapping-screws-with-bosses","title":"Self-tapping screws with bosses","text":"<p>The Create\u00ae 3 robot's holes are sized for M3 or #4 screws. It is possible to use special self-tapping plastic screws (or in a pinch, sheet metal or wood screws) to screw through the cover into a 3D-printed boss. Many of our example STLs use this technique.</p>"},{"location":"hw/mechanical/#machine-screws-with-nuts","title":"Machine screws with nuts","text":"<p>The Create\u00ae 3 robot's holes are sized for M3 or #4 screws.</p>"},{"location":"hw/mechanical/#cable-ties","title":"Cable ties","text":"<p>Cable ties (also known as zip ties) can be threaded through the 3 mm holes. 2.5 mm widths are common and fit nicely.</p>"},{"location":"hw/mechanical/#twist-ties","title":"Twist ties","text":"<p>Twist ties are a quick, cheap, and reusable way for holding wires or other non-structural pieces.</p>"},{"location":"hw/mechanical/#plastic-rivets","title":"Plastic Rivets","text":"<p>Push-in, split-shank plastic rivets (either for M3 or 0.115\" holes) are fast and inexpensive ways to mount thin stock to the Create\u00ae 3 robot's faceplate.</p>"},{"location":"hw/mechanical/#highly-sophisticated-interlocking-brick-system","title":"Highly sophisticated interlocking brick system","text":"<p>The typical toy brick has its studs spaced at 8 mm, while Create\u00ae 3's holes are spaced at 12 mm. It is possible to place an stud adapter mount into every other hole in order to connect toy bricks to the Create\u00ae 3. We recommend printing at 100% infill.</p>"},{"location":"hw/mechanical/#adding-sensors","title":"Adding sensors","text":"<p>A growing library of printable mounts for attaching sensors to the Create 3 robot using its 12 mm grid of 3 mm holes is available here.</p>"},{"location":"hw/mechanical/#adding-a-rear-caster","title":"Adding a rear caster","text":"<p>Out of the box, Create\u00ae 3  has a center of gravity in front of the two drive wheels and features an integrated front caster to act as a third point of contact. If you add a payload that is heavy and/or causes the robot center of gravity to move behind the drive wheels, you may want to add a second caster wheel in the rear to prevent sliding along the back edge. Below you will find designs for two, 3D-printable solutions which add a second Roomba\u00ae caster wheel to the rear of the Create\u00ae 3.</p>"},{"location":"hw/mechanical/#rear-caster-attachment","title":"Rear caster attachment","text":"<p>The first option is a smaller print (99 x 83 x 58 mm) that attaches to the rear of the Create\u00ae 3 cargo bay. It is faster and simpler to build but protrudes 54 mm behind the rear of the robot, so it may not be suitable for situations were the robot needs to navigate tight spaces or in cluttered environments.</p> <p></p> <p>The rear caster attachment is held in place between the handle and cable passthrough of the cargo bay using a printed latch and two M3 or #4 self-tapping screws. The Roomba\u00ae caster wheel is inserted into the bottom opening and held in place with a small locking piece which is then screwed into place. If the caster does not rotate freely, sand or file the bearing surface along the caster's axis of rotation.</p> Part Quantity Roomba\u00ae caster wheel 1 Rear caster attachment 1 Caster lock 1 Top latch 1 M3 or #4 self-tapping screw 3"},{"location":"hw/mechanical/#cargo-bay-with-integrated-caster","title":"Cargo bay with integrated caster","text":"<p>The second option replaces the included Cargo Bay with one that contains an integrated rear caster. It requires a larger print volume (208 x 201 x 66 mm) and slightly reduces the cargo space, but the solution does not protrude beyond the back of the robot. This allows the robot to turn in tight spaces and reduces the likelihood of the caster attachment getting caught on objects in the environment.</p> <p></p> <p>To assemble, insert the Roomba\u00ae caster wheel through the bottom and hold it in place with the printed caster lock which is secured with an M3 self-tapping screw. Depending on your payload weight and distribution, you may also want to transfer the ballast from the included Create\u00ae 3 cargo bay to this new one.</p> Part Quantity Roomba\u00ae caster wheel 1 Cargo bay with caster 1 Caster lock 1 Ballast and M2.6X6 screw from Create\u00ae 3 Cargo Bay 2 M3 or #4 self-tapping screw 1"},{"location":"hw/mechanical/#downloadable-3d-model","title":"Downloadable 3D Model","text":"<p> Download this STEP model (17.8 MB)1 to help design attachments or payloads for Create\u00ae 3.</p>"},{"location":"hw/mechanical/#dimensioned-drawings","title":"Dimensioned Drawings","text":""},{"location":"hw/mechanical/#top-with-faceplate-attached","title":"Top with Faceplate Attached","text":""},{"location":"hw/mechanical/#top-with-faceplate-removed","title":"Top with Faceplate Removed","text":""},{"location":"hw/mechanical/#side-view","title":"Side View","text":"<p> Wheel travel is approximately 30 mm.</p>"},{"location":"hw/mechanical/#bottom-view","title":"Bottom View","text":""},{"location":"hw/mechanical/#cargo-bay-top","title":"Cargo Bay - Top","text":""},{"location":"hw/mechanical/#ir-proximity-sensors","title":"IR Proximity Sensors","text":"<ol> <li> <p>Copyright \u00a9 2021-22 iRobot Corporation. All Rights Reserved.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/navqplus_hookup/","title":"iRobot\u00ae Create\u00ae 3 Hookup Guide for NavQPlus by NXP\u00ae","text":"<p>Important</p> <p>This is community-submitted content. Please feel welcome to submit PRs for additions or corrections.</p> <p>The iRobot\u00ae Create\u00ae 3 robot has a USB-C\u00ae1 connector implementing a USB 2.0 host capable of 5 V @ 3 A continuous, which can be used to power and communicate with various downstream devices.</p> <p>NavQPlus is an open source reference design provided by NXP\u00ae and manufacturable by anyone. Since NavQPlus has USB-C\u00ae ports capable of being configured as a USB Ethernet Gadget, a cable with a USB-C\u00ae connector on both ends is all that is required.</p> <p>Note</p> <ul> <li>Unless set otherwise, the default USB-C\u00ae port for use as an Ethernet Gadget device is configured to only the centermost USB-C\u00ae port (labeled USB 2) as shown in the example pictures.</li> </ul> <p>The NavQPlus is pictured in the cargo bay using the 3D-printed adapter plate and on top of the faceplate using the 3D-printed case.  </p>"},{"location":"hw/navqplus_hookup/#printable-case","title":"Printable Case","text":"<p>The NavQPlus has a printable case specifically designed for use with the Create\u00ae 3, allowing for it to be mounted to the faceplate or cargo bay. The base of the case attaches to the NavQPlus using the existing four (4) M2.5-0.45 x 12mm System On Module (SOM) mounting screws.</p> <p>Note</p> <ul> <li>The top case is designed to be fastened together to the base of the case with four (4) M3-0.5 x 10mm screws if not mounted to a Create\u00ae 3 plate or M3-0.5 x 12mm if mounted; cap head is suggested.</li> <li>For best results, it is suggested to tap/thread the M3-0.5 on the top case and M2.5-0.45 (SOM) holes on the base case.</li> </ul> <p>Setup showing faceplate mounted case and printable minimal lidar and camera bolt post mounts. </p>"},{"location":"hw/navqplus_hookup/#printable-adapter","title":"Printable Adapter","text":"<p>If a more minimal mount is desired instead of a case, an adapter plate using the existing SOM mounting screws for fastening is also provided.</p> <p>Note</p> <ul> <li>This adapter is designed to be fastened to the Create\u00ae 3 plate with four (4) M3-0.5 x 6mm screws; cap head is suggested.</li> <li>For best results, it is suggested to tap/thread the M3-0.5 (Create\u00ae 3 mounting) and M2.5-0.45 (SOM) holes.</li> </ul> <ol> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/overview/","title":"iRobot\u00ae Create\u00ae 3 Hardware Overview","text":"<p>The Create\u00ae 3 is based on the Roomba\u00ae, a robot vacuum cleaner. Its sensors, actuators, and compact design are capable of navigating and mapping a the whole floor of a home or office space. The robot also ships with an iRobot\u00ae Home Base\u2122 Charging Station.</p> <p> The front of the robot features a multizone bumper with seven pairs of IR proximity sensors, which can be used to detect obstacles. The top of the robot contains three buttons which can all be overloaded by a ROS 2 application (only the \u2022 and \u2022\u2022 buttons can be overloaded in the iRobot Coding app.) The power button features a ring of six RGB LEDs for indication.</p> <p> The faceplate and cargo bay of the robot feature a regular hole pattern for attaching payloads and can be removed without tools for quick prototyping. There are two cable passthroughs: one on the top edge of the cargo bay which is good for quick prototyping and one that penetrates the top cover and faceplate which is useful for keeping wires within the radius of the robot. More information on these features can be found on the Mechanical page.</p> <p>Also visible with the faceplate removed is the adapter board, which is used to interface to external computers either through Bluetooth\u00ae1 or via USB-C\u00ae2. More information on this board is available on the Electrical page.</p> <p> The bottom of the robot includes four cliff sensors to keep the robot on solid ground, a front caster (by default, the robot's center of gravity is forward of the center axis), charging contacts, two wheels with current sensors and encoders, and an optical odometry sensor. Not visible is the robot's IMU, which is used with the optical odometry sensor and wheel encoders to generate a fused odometry estimate.</p> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/print_casters/","title":"iRobot\u00ae Create\u00ae 3 Printable Caster Parts","text":"<p>Notice</p> <p>This is an autogenerated page containing links to STLs suitable for attaching a rear caster to the iRobot\u00ae Create\u00ae 3 robot. For further information, see here</p>"},{"location":"hw/print_casters/#cargo-bay-with-caster","title":"Cargo Bay with Caster","text":"<ul> <li>Cargo Bay with Caster STL (10.39 MB)</li> </ul>"},{"location":"hw/print_casters/#caster-lock","title":"Caster Lock","text":"3D-Rendering <ul> <li>Caster Lock STL (53 kB)</li> </ul>"},{"location":"hw/print_casters/#rear-caster-attachment","title":"Rear Caster Attachment","text":"3D-Rendering <ul> <li>Rear Caster Attachment STL (0.83 MB)</li> </ul>"},{"location":"hw/print_casters/#rear-caster-attachment-latch","title":"Rear Caster Attachment Latch","text":"3D-Rendering <ul> <li>Rear Caster Attachment Latch STL (52 kB)</li> </ul> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/print_compute/","title":"iRobot\u00ae Create\u00ae 3 Printable Compute Board Parts","text":"<p>Notice</p> <p>This is an autogenerated page containing links to STLs suitable for mounting various compute boards to the iRobot\u00ae Create\u00ae 3 regular mounting pattern.</p>"},{"location":"hw/print_compute/#navqplus-by-nxp","title":"NavQPlus by NXP\u00ae","text":""},{"location":"hw/print_compute/#adapter-plate","title":"Adapter Plate","text":"3D-Rendering <ul> <li>Adapter Plate STL (1.21 MB)</li> </ul>"},{"location":"hw/print_compute/#case-base","title":"Case Base","text":"3D-Rendering <ul> <li>Case Base STL (150 kB)</li> </ul>"},{"location":"hw/print_compute/#case-top","title":"Case Top","text":"3D-Rendering <ul> <li>Case Top STL (170 kB)</li> </ul>"},{"location":"hw/print_compute/#nvidia-jetsontm","title":"NVIDIA\u00ae Jetson\u2122","text":""},{"location":"hw/print_compute/#mount-bracket","title":"Mount Bracket","text":"3D-Rendering <ul> <li>Mount Bracket STL (338 kB)</li> </ul>"},{"location":"hw/print_compute/#raspberry-pi","title":"Raspberry Pi\u00ae","text":""},{"location":"hw/print_compute/#large-mount","title":"Large Mount","text":"3D-Rendering <ul> <li>Large Mount STL (0.53 MB)</li> </ul>"},{"location":"hw/print_compute/#small-mount","title":"Small Mount","text":"3D-Rendering <ul> <li>Small Mount STL (130 kB)</li> </ul> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/print_generic/","title":"iRobot\u00ae Create\u00ae 3 Printable Generic Parts","text":"<p>Notice</p> <p>This is an autogenerated page containing links to STLs suitable for mounting miscellaneous things to the iRobot\u00ae Create\u00ae 3 regular mounting pattern.</p>"},{"location":"hw/print_generic/#bolt-post-mount","title":"Bolt Post Mount","text":"3D-Rendering <ul> <li>Bolt Post Mount STL (410 kB)</li> </ul>"},{"location":"hw/print_generic/#stud-mount","title":"Stud Mount","text":"3D-Rendering <ul> <li>Stud Mount STL (0.59 MB)</li> </ul> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/print_sensor_mounts/","title":"iRobot\u00ae Create\u00ae 3 Printable Sensor Mount Parts","text":"<p>Notice</p> <p>This is an autogenerated page containing links to STLs suitable for mounting various sensors to the iRobot\u00ae Create\u00ae 3 regular mounting pattern.</p>"},{"location":"hw/print_sensor_mounts/#intel-realsensetm","title":"Intel\u00ae RealSense\u2122","text":""},{"location":"hw/print_sensor_mounts/#d435-mount","title":"D435 Mount","text":"3D-Rendering <ul> <li>D435 Mount STL (462 kB)</li> </ul>"},{"location":"hw/print_sensor_mounts/#luxonis","title":"Luxonis\u00ae","text":""},{"location":"hw/print_sensor_mounts/#oak-d-lite-mount","title":"Oak-D\u00ae Lite Mount","text":"3D-Rendering <ul> <li>Oak-D\u00ae Lite Mount STL (422 kB)</li> </ul>"},{"location":"hw/print_sensor_mounts/#oak-d-mount","title":"Oak-D\u00ae Mount","text":"3D-Rendering <ul> <li>Oak-D\u00ae Mount STL (401 kB)</li> </ul>"},{"location":"hw/print_sensor_mounts/#slamtec","title":"SLAMTEC\u00ae","text":""},{"location":"hw/print_sensor_mounts/#rplidar-a1-minimal-mount","title":"RPLIDAR A1 Minimal Mount","text":"3D-Rendering <ul> <li>RPLIDAR A1 Minimal Mount STL (396 kB)</li> </ul>"},{"location":"hw/print_sensor_mounts/#rplidar-a1-mount","title":"RPLIDAR A1 Mount","text":"3D-Rendering <ul> <li>RPLIDAR A1 Mount STL (1.05 MB)</li> </ul>"},{"location":"hw/print_sensor_mounts/#rplidar-a1-usb-mount","title":"RPLIDAR A1 USB Mount","text":"3D-Rendering <ul> <li>RPLIDAR A1 USB Mount STL (465 kB)</li> </ul> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"hw/rpi_hookup/","title":"iRobot\u00ae Create\u00ae 3 Hookup Guide for Raspberry Pi\u00ae","text":"<p>The iRobot\u00ae Create\u00ae 3 robot has a USB-C\u00ae1 connector implementing a USB 2.0 host capable of 5 V @ 3 A continuous, which can be used to power and communicate with various downstream devices. Here are some hookup examples for Raspberry Pi\u00ae2 computers.</p>"},{"location":"hw/rpi_hookup/#raspberry-pi-4","title":"Raspberry Pi\u00ae 4","text":"<p>Since the Raspberry Pi\u00ae 4 has a USB-C\u00ae port capable of an OTG connection, a cable with a USB-C\u00ae connector on both ends is all that is required. The Raspberry Pi\u00ae is pictured in the cargo bay with the large mount, and the Adapter Board is removed from the robot for clarity. </p>"},{"location":"hw/rpi_hookup/#raspberry-pi-1-3-model-b","title":"Raspberry Pi\u00ae 1-3 Model B","text":"<p>The original Raspberry Pi\u00ae through the Raspberry Pi\u00ae 3 do not have upstream (device) ports, so it's a little more difficult to connect and power them cleanly. We suggest using a USB-C\u00ae hub which includes an integrated USB to Ethernet adapter as the cleanest way to go.  It's also possible to power the Raspberry Pi\u00ae using the USB-C\u00ae port on the Adapter Board with the help of a downstream connection adapter like this one and make the data connection over Wi-Fi.</p>"},{"location":"hw/rpi_hookup/#raspberry-pi-zero","title":"Raspberry Pi\u00ae Zero","text":"<p>This should be the same as the Raspberry Pi\u00ae 4. The Micro-USB connector labeled \"USB\" is an OTG port capable of being an Ethernet Gadget; use a USB Micro B to USB-C\u00ae cable to connect it directly to the robot's Adapter Board. </p>"},{"location":"hw/rpi_hookup/#raspberry-pi-printable-mounts","title":"Raspberry Pi\u00ae Printable Mounts","text":"<p>The Raspberry Pi\u00ae mounting scheme does not match Create\u00ae 3's faceplate or cargo bay hole pattern; here are two 3D-printable mounts. The larger mount is more rigid but requires three times as much time to print in comparison to the smaller mount.</p> <ol> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>Raspberry Pi\u00ae is a trademark of Raspberry Pi Trading.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_1_1/","title":"iRobot\u00ae Create\u00ae 3 Release G.1.1","text":"<p>[Click here to download release G.1.1]</p>"},{"location":"releases/g_1_1/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.2</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_1_1/#release-overview","title":"Release Overview","text":"<p>This release provides the robot's sensors and controls via topics, actions, and services, see ROS 2 API.</p> <p>The robot runs a webserver for updating software, configuring to the network, getting error logs from the robot, and configuring ROS 2 environment variables and parameters. This release has some known issues using the network configuration webserver page to associate with networks using characters that are not alphanumeric 7-bit ASCII. If there is an issue getting on the network, it is recommended to first update the software via the robot's host AP mode, then try getting on the network with the latest version, see Create\u00ae 3 Setup.</p>"},{"location":"releases/g_2_2/","title":"iRobot\u00ae Create\u00ae 3 Release G.2.2","text":"<p>[Click here to download release G.2.2]</p>"},{"location":"releases/g_2_2/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_2_2/#release-overview","title":"Release Overview","text":"<p>As with the last release, this one provides the robot's sensors and controls via topics, actions, and services; for more, see ROS 2 API. iRobot\u00ae Education Bluetooth protocol functionality has been greatly improved in this release; we have released the iRobot Education Python Web Playground to interact with the robot. Please be sure your robot's BLE/USB Toggle is in the \"BLE\" position in order to use the robot in this mode. Note that when the Bluetooth1 radio is enabled, the USB-C2 port cannot communicate with a downstream device (though it remains powered).</p>"},{"location":"releases/g_2_2/#changelog-from-g11","title":"Changelog (from G.1.1)","text":""},{"location":"releases/g_2_2/#core-robot","title":"Core Robot","text":"<ul> <li>Webserver<ul> <li>Properly handles Unicode characters with SSIDs, hostnames, and Bluetooth names</li> <li>Reboot Robot and Factory Reset are only available in AP mode</li> <li>Added \"Identify Robot\" when in AP mode to assist setting up multiple robots at once</li> <li>MAC addresses are visible on About page</li> </ul> </li> <li>User Interface<ul> <li>E-Stop and Backup Limit have new LED patterns to disambiguate from other uses of the UI</li> <li>Toggling USB/BLE no longer requires manual application reset from webserver</li> </ul> </li> <li>Motion Control<ul> <li>Improve reporting and recovery after safety limits are triggered</li> </ul> </li> </ul>"},{"location":"releases/g_2_2/#ros-2","title":"ROS 2","text":"<ul> <li>Docking / undocking action improvements and fixes</li> <li>Coordinate system fixes<ul> <li><code>base_link</code> is now 3D</li> <li><code>base_footprint</code> added as a 2D TF frame</li> <li><code>imu_link</code> has been removed</li> </ul> </li> <li>Advertise light ring brightness parameter</li> <li>Added audio publication and action to make speakers play sound</li> </ul>"},{"location":"releases/g_2_2/#irobot-education-bluetooth-protocol-mode","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<ul> <li>Fully implement protocol v1.4</li> <li>Add sound device</li> <li>Add sound on connection and disconnection</li> <li>Advertising rate increased to 10 Hz</li> <li>Changing robot name when connected is now reflected in advertisement</li> <li>Pressing the power button stops all actuators</li> <li>Connection improvements on iOS and Android</li> <li>Many stability improvements</li> </ul>"},{"location":"releases/g_2_2/#known-issues","title":"Known issues","text":""},{"location":"releases/g_2_2/#core-robot_1","title":"Core Robot","text":"<ul> <li>Robot may require multiple connection attempts when changing Wi-Fi networks</li> <li>Robot will restart application when its connectivity changes, including connection changes with Wi-Fi or the USB interface, or when it receives a new DHCP lease. This is helpful for autoconfiguration with DDSes but can be disruptive.</li> <li>Robot prefers time sync from Wi-Fi over its USB interface</li> </ul>"},{"location":"releases/g_2_2/#ros-2_1","title":"ROS 2","text":"<ul> <li>When using CycloneDDS, invoking ROS 23 actions causes a memory leak on the robot. When the robot runs out of memory, it will automatically restart the application. Follow this issue for more information.</li> </ul>"},{"location":"releases/g_2_2/#irobot-education-bluetooth-protocol-mode_1","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<ul> <li>Robot does not recognize disconnection for thirty seconds.</li> <li>Changing Bluetooth name in the webserver does not modify advertisement name until application is restarted</li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>Python 3 is governed by the Python Software Foundation.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_3_1/","title":"iRobot\u00ae Create\u00ae 3 Release G.3.1","text":"<p>[Click here to download release G.3.1]</p> <p>Note: A G.3.2 patch release is installed on some new robots from the factory. There is no user-facing difference between these two firmware versions; the difference is related to the manufacturing process.</p> <p>For iRobot\u00ae Education Bluetooth1 users, this is mostly a feature release. For ROS 22 users, this is mostly a bugfix release. See below for details.</p>"},{"location":"releases/g_3_1/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_3_1/#release-overview","title":"Release Overview","text":"<p>As with the last release, this one provides the robot's sensors and controls via topics, actions, and services; for more, see ROS 2 API. There have been no changes to the ROS 2 API.</p> <p>iRobot\u00ae Education Bluetooth protocol functionality has been further improved in this release, adding the seventh IR proximity sensor, and some commands related to docking and the docking sensor. We have changed the robot's policy to disable all reflexes while in this mode (instead of just the bump reflex). The robot should also respond more rapidly to disconnection.</p>"},{"location":"releases/g_3_1/#changelog-from-g22","title":"Changelog (from G.2.2)","text":""},{"location":"releases/g_3_1/#core-robot","title":"Core Robot","text":"<ul> <li> <p>Webserver</p> <ul> <li>Added ROS namespace form validation (#71)</li> </ul> </li> <li> <p>User Interface</p> <ul> <li>Reduce log spam from audio synthesizer and BLE advertisements</li> <li>Add more useful logging from mobility board to nav board</li> </ul> </li> <li> <p>Motion Control</p> <ul> <li>Fix bug relating to robot erroneously hitting backup limit when backup safety is disabled (#175)</li> <li>Bugfixes around e-stop logic</li> <li>New turn angle controller</li> </ul> </li> <li> <p>Connectivity</p> <ul> <li>Robot will not restart application on DHCP renewals if the address stays the same (#194)</li> <li>Add beta serial port forwarding feature</li> </ul> </li> </ul>"},{"location":"releases/g_3_1/#ros-2","title":"ROS 2","text":"<ul> <li>Add system monitor node to report CPU and RAM usage to the log, as well as checking for multiple robots on the same topic.</li> <li>Implement ResetPose Service (#193)</li> <li>Proximity slowdown reflex no longer ignores safety_override setting</li> </ul>"},{"location":"releases/g_3_1/#irobot-education-bluetooth-protocol-mode","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<ul> <li>Fully implement protocol v1.5</li> <li>Robot disables all reflexes by default upon connection (#173)</li> <li>Fix serial number reporting</li> <li>Fix battery event rate</li> <li>Robot responds more quickly upon disconnection</li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_4_1/","title":"iRobot\u00ae Create\u00ae 3 Release G.4.1","text":"<p>[Click here to download release G.4.1]</p> <p>For iRobot\u00ae Education Bluetooth1 users, this is mostly a bugfix release. For ROS 22 users, this is mostly a feature release. See below for details.</p>"},{"location":"releases/g_4_1/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_4_1/#release-overview","title":"Release Overview","text":"<p>There have been no changes to the ROS 2 API. Support has been added for the robot to use a Fast-DDS Discovery Server. Some bugs have been found and fixed in the iRobot\u00ae Education Bluetooth protocol implementation. The default route should be properly set when the robot is connected to Ethernet-over-USB (but not Wi-Fi).</p>"},{"location":"releases/g_4_1/#changelog-from-g31","title":"Changelog (from G.3.1)","text":""},{"location":"releases/g_4_1/#core-robot","title":"Core Robot","text":"<ul> <li> <p>Webserver</p> <ul> <li>Added menu for beta features; hopefully more to come soon.</li> <li>Exposed page for beta feature: serial device forwarding over a socket.</li> <li>Added options for use of Fast-DDS Discovery server to Application Configuration page.</li> <li>More consistent application of the style sheets across the UI.</li> <li>Factory Reset option should now be available over Soft AP mode (bugfix).</li> <li>Fix \"easy\" update (over the Internet) to be aware of different ROS versions, and to update properly.</li> </ul> </li> <li> <p>Connectivity</p> <ul> <li>Fixed bug where robot would not always properly set a default route when a device is connected to Ethernet-over-USB but not connected to Wi-Fi. (#184)</li> </ul> </li> <li> <p>OS</p> <ul> <li>Fixed a bug on boot which could cause the system to hang during an update, sometimes causing the robot not to properly update (often with a mysterious red light).</li> </ul> </li> </ul>"},{"location":"releases/g_4_1/#ros-2","title":"ROS 2","text":"<ul> <li>Implement option to use a Fast-DDS discovery server when RMW is set to Fast-DDS.</li> <li>Add parameter to disable <code>odom</code> transformations (#144)</li> <li>IMU update rate is now 100 Hz</li> </ul>"},{"location":"releases/g_4_1/#irobot-education-bluetooth-protocol-mode","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<ul> <li>Fix incorrect cliff sensor message (#312)</li> <li>Fix incorrect accelerometer message (#309)</li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_4_3/","title":"iRobot\u00ae Create\u00ae 3 Release G.4.3","text":"<p>[Click here to download release G.4.3]</p> <p>For iRobot\u00ae Education Bluetooth1 users, there are no changes. For ROS 22 users, this release is to add beta features to help with time sync. See below for details.</p>"},{"location":"releases/g_4_3/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_4_3/#release-overview","title":"Release Overview","text":"<p>There have been no changes to the ROS 2 API. The robot's time can be set directly, or the ntp daemon can be asked to resync, through the webserver. (#324, #327)</p>"},{"location":"releases/g_4_3/#changelog-from-g41","title":"Changelog (from G.4.1)","text":""},{"location":"releases/g_4_3/#core-robot","title":"Core Robot","text":"<ul> <li> <p>Webserver</p> <ul> <li>Added beta feature: set time.</li> <li>Added beta feature: restart ntpd.</li> <li>Corrected response text from /api/restart-app (#330)</li> </ul> </li> <li> <p>OS</p> <ul> <li>Corrected direction of boot LED animation (bug introduced in G.4.1).</li> </ul> </li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_4_4/","title":"iRobot\u00ae Create\u00ae 3 Release G.4.4","text":"<p>[Click here to download release G.4.4]</p>"},{"location":"releases/g_4_4/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_4_4/#release-overview","title":"Release Overview","text":"<p>For iRobot\u00ae Education Bluetooth1 users, there are no changes. For ROS 22 users, this release fixes an issue. See below for details.</p>"},{"location":"releases/g_4_4/#changelog-from-g43","title":"Changelog (from G.4.3)","text":""},{"location":"releases/g_4_4/#ros-2","title":"ROS 2","text":"<ul> <li> <p><code>cmd_audio</code> subscription is now <code>reliable</code> instead of <code>best-effort</code> (#356)</p> <p>Important</p> <p>A \"best-effort\" publisher will no longer be able to communicate with this subscription. See this compatibilty matrix for details.</p> </li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/g_4_5/","title":"iRobot\u00ae Create\u00ae 3 Release G.4.5","text":"<p>[Click here to download release G.4.5]</p>"},{"location":"releases/g_4_5/#this-release-is-running-ros-2-galactic-with-the-following-interface-library-versions","title":"This release is running ROS 2 Galactic with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 1.2.4</li> <li>cyclonedds - 0.8.1</li> <li>Fast-DDS - 2.3.3</li> </ul>"},{"location":"releases/g_4_5/#release-overview","title":"Release Overview","text":"<p>For iRobot\u00ae Education Bluetooth1 users, there are no changes. For ROS 22 users, this release fixes a few issues and adds a beta feature. See below for details.</p>"},{"location":"releases/g_4_5/#changelog-from-g44","title":"Changelog (from G.4.4)","text":""},{"location":"releases/g_4_5/#ros-2","title":"ROS 2","text":"<ul> <li>Corrected rate of <code>/stop_status</code> publication (at least 1 Hz)</li> <li>Corrected rate of <code>/battery_status</code> publication (at least 0.1 Hz)</li> </ul>"},{"location":"releases/g_4_5/#core-robot","title":"Core Robot","text":"<ul> <li>Webserver / OS<ul> <li>Added beta feature: set wired subnet.</li> </ul> </li> </ul> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/h_0_0/","title":"iRobot\u00ae Create\u00ae 3 Release H.0.0","text":"<p>[Click here to download release H.0.0]</p> <p>This release is considered a beta. Please report any issues as they are encountered.</p> <p>Bug</p> <p>This beta release is not stable in BLE mode. Please be sure the USB/BLE toggle on the adapter board is switched to \"USB\" before using this firmware.</p>"},{"location":"releases/h_0_0/#this-release-is-running-ros-2-humble-with-the-following-interface-library-versions","title":"This release is running ROS 2 Humble with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 2.1.0</li> <li>cyclonedds - 0.9.0</li> <li>Fast-DDS - 2.6.2</li> </ul>"},{"location":"releases/h_0_0/#release-overview","title":"Release Overview","text":"<p>This release has feature parity with G.3.1, except that ROS 21 has been upgraded to Humble.</p>"},{"location":"releases/h_0_0/#ros-2","title":"ROS 2","text":"<p>As with the last release, this one provides the robot's sensors and controls via topics, actions, and services; for more, see ROS 2 API.</p> <p>Between Galactic and Humble, the docking API (messages, actions, and topics) have slightly changed as follows:</p> <ul> <li>the <code>DockServo</code> action is now <code>Dock</code> to match the <code>Undock</code> action (example here)</li> <li>the <code>/dock</code> topic (and <code>Dock</code> message) is now <code>/dock_status</code> (and <code>DockStatus</code> message) to avoid confusion with the action (example here)</li> </ul>"},{"location":"releases/h_0_0/#irobot-education-bluetooth-protocol-mode","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<p>iRobot\u00ae Education Bluetooth2 protocol mode is not supported.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/h_1_0/","title":"iRobot\u00ae Create\u00ae 3 Release H.1.0","text":"<p>[Click here to download release H.1.0]</p> <p>Warning</p> <p>When using Fast-DDS, startup times are about 30s longer than in our Galactic release. We are working on a fix.</p>"},{"location":"releases/h_1_0/#this-release-is-running-ros-2-humble-with-the-following-interface-library-versions","title":"This release is running ROS 2 Humble with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 2.1.0</li> <li>cyclonedds - 0.9.0</li> <li>Fast-DDS - 2.6.4</li> </ul>"},{"location":"releases/h_1_0/#release-overview","title":"Release Overview","text":"<p>This release has feature parity with G.4.3, except that ROS 21 has been upgraded to Humble.</p>"},{"location":"releases/h_1_0/#ros-2","title":"ROS 2","text":"<p>As with the last release, this one provides the robot's sensors and controls via topics, actions, and services; for more, see ROS 2 API.</p> <p>Between Galactic and Humble, the docking API (messages, actions, and topics) have slightly changed as follows:</p> <ul> <li>the <code>DockServo</code> action is now <code>Dock</code> to match the <code>Undock</code> action (example here)</li> <li>the <code>/dock</code> topic (and <code>Dock</code> message) is now <code>/dock_status</code> (and <code>DockStatus</code> message) to avoid confusion with the action (example here)</li> </ul>"},{"location":"releases/h_1_0/#irobot-education-bluetooth-protocol-mode","title":"iRobot\u00ae Education Bluetooth protocol mode","text":"<p>iRobot\u00ae Education Bluetooth2 protocol mode is supported; for best results, use Cyclone DDS.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/h_1_1/","title":"iRobot\u00ae Create\u00ae 3 Release H.1.1","text":"<p>[Click here to download release H.1.1]</p> <p>Warning</p> <p>When using Fast-DDS, startup times are about 30s longer than in our Galactic release. We are working on a fix.</p>"},{"location":"releases/h_1_1/#this-release-is-running-ros-2-humble-with-the-following-interface-library-versions","title":"This release is running ROS 2 Humble with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 2.1.0</li> <li>cyclonedds - 0.9.0</li> <li>Fast-DDS - 2.6.4</li> </ul>"},{"location":"releases/h_1_1/#release-overview","title":"Release Overview","text":"<p>For iRobot\u00ae Education Bluetooth1 users, there are no changes. For ROS 22 users, this release fixes a couple issues. See below for details.</p>"},{"location":"releases/h_1_1/#changelog-from-h10","title":"Changelog (from H.1.0)","text":""},{"location":"releases/h_1_1/#ros-2","title":"ROS 2","text":"<ul> <li>Fix for issue involving goal timeouts with Fast-DDS</li> <li> <p><code>cmd_audio</code> subscription is now <code>reliable</code> instead of <code>best-effort</code> (#356)</p> <p>Important</p> <p>A \"best-effort\" publisher will no longer be able to communicate with this subscription. See this compatibilty matrix for details.</p> </li> </ul> <ol> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/h_1_2/","title":"iRobot\u00ae Create\u00ae 3 Release H.1.2","text":"<p>[Click here to download release H.1.2]</p> <p>Warning</p> <p>When using Fast-DDS, startup times are about 30s longer than in our Galactic release. We are working on a fix.</p>"},{"location":"releases/h_1_2/#this-release-is-running-ros-2-humble-with-the-following-interface-library-versions","title":"This release is running ROS 2 Humble with the following interface library versions:","text":"<ul> <li>irobot_create_msgs - 2.1.0</li> <li>cyclonedds - 0.9.0</li> <li>Fast-DDS - 2.6.4</li> </ul>"},{"location":"releases/h_1_2/#release-overview","title":"Release Overview","text":"<p>For iRobot\u00ae Education Bluetooth1 users, there are no changes. For ROS 22 users, this release fixes a few issues and adds a beta feature. See below for details.</p>"},{"location":"releases/h_1_2/#changelog-from-h11","title":"Changelog (from H.1.1)","text":""},{"location":"releases/h_1_2/#ros-2","title":"ROS 2","text":"<ul> <li>Publications<ul> <li>Corrected rate of <code>/stop_status</code> publication (at least 1 Hz)</li> <li>Corrected rate of <code>/battery_status</code> publication (at least 0.1 Hz)</li> </ul> </li> <li>Fast-DDS<ul> <li>Changed publication mode from synchronous to asynchronous (matches Galactic)</li> </ul> </li> </ul>"},{"location":"releases/h_1_2/#core-robot","title":"Core Robot","text":"<ul> <li>Webserver / OS<ul> <li>Added beta feature: set wired subnet.</li> </ul> </li> </ul> <ol> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"releases/overview/","title":"iRobot\u00ae Create\u00ae 3 Releases","text":""},{"location":"releases/overview/#overview","title":"Overview","text":"<p>Create\u00ae 3 releases take the version schema</p> <p>&lt;ROS 2 letter&gt;.&lt;major number&gt;.&lt;minor number&gt;</p> <p>The letter corresponds with the ROS 21 Release. For example, G corresponds with Galactic, and H corresponds with Humble. See ROS 2 Releases.</p> <p>The first number corresponds with a major release number within the ROS 2 letter release. Increments to major release imply API breaking changes or significant new features.</p> <p>The second number corresponds with a minor release number within the major release number. Increments to the minor release imply bug fixes or small feature additions that should be backwards compatible with code that currently integrates with the major release number. One exception is that beta features may be added in minor releases.</p> <p>The latest stable release can be found at http://edu.irobot.com/create3-latest-fw.</p> <p>The latest stable Humble release can be found at http://edu.irobot.com/create3-humble-latest-fw. The latest stable Galactic release can be found at http://edu.irobot.com/create3-galactic-latest-fw.</p> <p>Downloads of a particular version can be found on each individual release page.</p> <p>Note</p> <p>As of March 2023, use of Galactic is recommended, as it is more performant than Humble on Create 3.</p>"},{"location":"releases/overview/#releases","title":"Releases","text":""},{"location":"releases/overview/#humble","title":"Humble","text":"<ul> <li>H.1.2 (humble-latest)</li> <li>H.1.1</li> <li>H.1.0</li> <li>H.0.0</li> </ul>"},{"location":"releases/overview/#galactic","title":"Galactic","text":"<ul> <li>G.4.5 (galactic-latest, latest)</li> <li>G.4.4</li> <li>G.4.3</li> <li>G.4.1</li> <li>G.3.1</li> <li>G.2.2</li> <li>G.1.1</li> </ul> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/compute-ntp/","title":"Setup NTP on compute board to serve time to Create\u00ae 3","text":""},{"location":"setup/compute-ntp/#why-should-i-do-this","title":"Why should I do this?","text":"<p>ROS 21 is dependent upon synchronized clocks between nodes to have all data in the same reference time. When the Create\u00ae 3 is publishing on topics, it is publishing its data with the timestamp of its system clock, which synchronizes with an NTP server. If the Create\u00ae 3's Wi-Fi is connected to a network with internet connection, it will sync to a global time NTP server. The Create\u00ae 3 NTP config is also set to listen for servers on USB IP address 192.168.186.1 and 192.168.186.3. If the compute board is connected over USB to the Create\u00ae 3 with the compute board assigned one of these IP addresses on its USB interface, NTP on the compute board can keep the clocks between the compute board and Create\u00ae 3 in sync, even without an internet connection. If there is an internet connection on both compute board and Create\u00ae 3, configuring the NTP server on the compute board to serve the Create\u00ae 3 can still add value by reducing jitter between clocks. If your Create\u00ae 3 and compute board have an internet connection, this is not required, but is still recommended.</p>"},{"location":"setup/compute-ntp/#step-by-step","title":"Step-by-step","text":"<ol> <li> <p>On your Compute Board, install chrony NTP server package</p> <pre><code>sudo apt install chrony\n</code></pre> </li> <li> <p>Edit the config file</p> <pre><code>sudo vi /etc/chrony/chrony.conf\n</code></pre> </li> <li> <p>Add the following lines after the <code>pool #.ubuntu.pool.ntp.org iburst maxsources #</code> block</p> <pre><code>server 192.168.186.2 presend 0 minpoll 0 maxpoll 0 iburst  prefer trust\n# Enable serving time to ntp clients on 192.168.186.0 subnet.\nallow 192.168.186.0/24\n</code></pre> </li> <li> <p>Optionally add the following lines immediately afterward if your SBC will not have a connection to a reference clock (i.e., the Internet)</p> <pre><code># Serve time even if not synchronized to a time source\nlocal stratum 10\n</code></pre> </li> <li> <p>Restart chrony</p> <pre><code>sudo service chrony restart\n</code></pre> </li> <li> <p>Verify compute NTP server is talking to the Create\u00ae 3</p> <pre><code>sudo chronyc clients\n</code></pre> </li> <li> <p>Confirm 192.168.182.2 shows non 0 number in NTP column</p> <pre><code>Hostname                      NTP   Drop Int IntL Last     Cmd   Drop Int  Last\n===============================================================================\n192.168.186.2                  51      0   5   -    32       0      0   -     -\nlocalhost                       0      0   -   -     -      31      0   7     4\n</code></pre> </li> <li> <p>Note that if there is a large jump in the time, the Create\u00ae 3 may not accept it until its next reboot.     This can be verified by checking the Create\u00ae 3 robot's log for a line like</p> <pre><code>user.notice ntpd: ntpd: reply from 192.168.186.3: delay ### is too high, ignoring\n</code></pre> <p>If this happens, simply restart the robot (not just the application) via the webserver over the USB network connection.</p> </li> </ol> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/docker/","title":"Create\u00ae 3 Desktop Docker Image","text":"<p>We provide a Docker image suitable for developing and running Create\u00ae 3 applications on your Desktop. The docker image is named <code>irobotedu/create3-galactic</code> and its source code can be found here.</p> <p>Note</p> <p>The Docker image can be run on any base OS. However, non Linux-based OS will require custom networking configuration in order to communicate between a Docker container and a remote ROS 2 application. </p>"},{"location":"setup/docker/#description-of-the-image","title":"Description of the Image","text":"<p>The Create\u00ae 3 Docker image is based off the official ROS 2 Docker images and runs an Ubuntu OS. It contains all the core ROS 2 packages contained in the \"desktop\" variant (i.e. it includes development tools, core libries and visualization tools).</p> <p>The Create\u00ae 3 Docker image includes pre-built all the open-source Create\u00ae 3 repositories such as: the Create\u00ae 3 ROS 2 message interfaces, the Create\u00ae 3 simulator (both Gazebo classic and Gazebo ignition) and the Create\u00ae 3 examples.</p>"},{"location":"setup/docker/#installing-docker","title":"Installing Docker","text":"<p>Follow the official instructions to setup Docker on your machine.</p>"},{"location":"setup/docker/#starting-a-docker-container","title":"Starting a Docker container","text":"<p>The following instructions may vary depending on your base OS and Docker installation mechanism.</p>"},{"location":"setup/docker/#linux","title":"Linux","text":"<p>The following instructions assume that you have followed the Docker post-installation steps for Linux.</p> <pre><code>docker run -it --network=host --privileged -e DISPLAY=$DISPLAY irobotedu/create3-galactic bash\n</code></pre> <p>The <code>--network=host</code> option is required in order to allow the Docker container to communicate using ROS 2 with remote applications (e.g. your Create\u00ae 3 robot or compute-board).</p> <p>The <code>--privileged -e DISPLAY=$DISPLAY</code> options are required in order to let the Docker container to access your xhost server and use GUI application (e.g. <code>rviz</code> or <code>gazebo</code>).</p> <p>After you started the docker container, if you want to use GUI application, one (or more) extra steps are necessary. A simple way is to run the following in a new terminal:</p> <pre><code>xhost +local:docker:CONTAINER_ID\n</code></pre> <p>Where <code>CONTAINER_ID</code> can be found either running <code>head -1 /proc/self/cgroup | cut -d / -f 3</code> inside the Docker container or by running <code>docker ps</code> in a new terminal.</p> <p>You can find other ways to enable GUI in docker here. As an alternative, you can use the rocker tool to wrap the <code>irobotedu/create3-galactic</code> image and add capabilities to it.</p>"},{"location":"setup/jetson/","title":"Software Config","text":""},{"location":"setup/jetson/#connect-create-3-to-nvidia-jetsontm-and-set-up-ros-2-galactic","title":"Connect Create\u00ae 3 to NVIDIA\u00ae Jetson\u2122 and set up ROS 2 Galactic","text":"<p>Important</p> <p>This is community-submitted content. Please feel welcome to submit PRs for additions or corrections.</p>"},{"location":"setup/jetson/#before-you-start","title":"Before you start","text":"<p>Attention</p> <p>These directions are written for someone with experience with embedded Linux and basic embedded computers.</p> <p>It is highly recommended to read through the getting started document for your NVIDIA\u00ae Jetson\u2122 developer kit before beginning:</p> <ul> <li>Jetson Orin Nano Developer Kit Getting Started Guide</li> <li>Getting Started With Jetson Xavier NX Developer Kit</li> <li>Getting Started with Jetson Nano Developer Kit</li> <li>Getting Started with Jetson Nano 2GB Developer Kit</li> </ul>"},{"location":"setup/jetson/#setup-overview","title":"Setup Overview","text":""},{"location":"setup/jetson/#ros-2-setup-on-jetson","title":"ROS 2 Setup on Jetson","text":""},{"location":"setup/jetson/#use-pre-built-ros-2-docker-container","title":"Use pre-built ROS 2 Docker container","text":"<p>The recommended way to run ROS 2 on Jetson is to use pre-built Docker container images.</p> <ol> <li> <p>Install NVIDIA Container Runtime with Docker integration</p> <p>It should be a part of JetPack, so if you use a NVIDIA supplied JetPack 5 image to flash your SD card, you can skip this process.</p> <pre><code>sudo apt update\nsudo apt install nvidia-container\n</code></pre> </li> <li> <p>Make docker command available without <code>sudo</code></p> <pre><code>sudo systemctl restart docker\nsudo usermod -aG docker $USER\nnewgrp docker\n</code></pre> </li> <li> <p>Set <code>nvidia</code> as the <code>default-runtime</code> for Docker.</p> <p>Edit <code>/etc/docker/daemon.json</code> to be the following.</p> <pre><code>{\n    \"runtimes\": {\n        \"nvidia\": {\n            \"path\": \"/usr/bin/nvidia-container-runtime\",\n            \"runtimeArgs\": []\n        }\n    },\n    \"default-runtime\": \"nvidia\"\n}\n</code></pre> </li> </ol>"},{"location":"setup/jetson/#a-use-jetson-containers-ros-2-galactic-container","title":"A. Use <code>jetson-containers</code> ROS 2 Galactic container","text":"<p>Dustin Franklin's <code>jetson-contianers</code> GitHub repository provides all the pre-built Docker container images for machine learning and ROS.</p> <ol> <li> <p>Use <code>jetson-containers</code>' script to simplify the invocation of <code>docker run</code> command.</p> <pre><code>git clone https://github.com/dusty-nv/jetson-containers/\ncd jetson-containers\nscripts/docker_run.sh -c dustynv/ros:galactic-desktop-l4t-r35.3.1\n</code></pre> </li> <li> <p>Inside the container, install additional ROS 2 packages</p> <pre><code>apt update &amp;&amp; apt install -y ros-galactic-irobot-create-msgs\n</code></pre> </li> </ol>"},{"location":"setup/jetson/#b-use-isaac-ros-ros-2-humble-container","title":"B. Use Isaac ROS (ROS 2 Humble) container","text":"<p>Attention</p> <p>If you chose and performed the above \"Use <code>jetson-containers</code> ROS 2 Galactic container\", you can skip this section</p> <p>NVIDIA Isaac ROS is a collection of hardware-accelerated, high performance, low latency ROS 2 packages that runs on and leverage the power of Jetson.</p> <p>It comes with a ROS 2 Humble based container, so if you plan to test/use any of Isaac ROS packages, running the Issac ROS container may be a good option.</p>"},{"location":"setup/jetson/#e-build-ros-2-from-source","title":"E. Build ROS 2 from source","text":"<p>Attention</p> <p>If you chose and performed the above \"Use <code>jetson-containers</code> ROS 2 Galactic container\", you can skip this section</p> <p>Jetson's BSP (JetPack 5) is based on Ubuntu 20.04. Debian packages for ROS 2 Humble are currently only available for Ubuntu Jammy (22.04), so you would need to build from source if you need to natively install ROS 2 on Jetson.</p>"},{"location":"setup/jetson/#communication-mode","title":"Communication mode","text":""},{"location":"setup/jetson/#c-setup-wi-fi-connections","title":"C. Setup Wi-Fi connections.","text":"<p>If you don't need wired communication between Create\u00ae 3 and Jetson\u2122, letting them communicate over Wi-Fi is easier than setting Ethernet over USB.</p>"},{"location":"setup/jetson/#create-3-wi-fi-setup","title":"Create\u00ae 3 Wi-Fi setup","text":"<p>Follow the main guide (https://edu.irobot.com/create3-setup) to connect your Create\u00ae 3 to your wireless AP.</p> <p>Once you connect Create\u00ae 3 robot to your wireless AP, and find out the new IP address assigned to your robot, you can access the robot web dashboard by the new IP address.</p> <p>If you plan to operate multiple Create\u00ae 3 robots in the same wireless network, it is a good idea to set \"ROS 2 Domain ID\" on the \"Application\" &gt; \"Configuration\" page.</p> <p></p>"},{"location":"setup/jetson/#jetsontm-wi-fi-setup","title":"Jetson\u2122 Wi-Fi setup","text":"<p>If you have your Jetson connected to a display monitor (\"Monitor-attached\" Mode), use the Ubuntu's GUI to setup Wi-Fi connection (official guide).</p> <p>If you cannot easily attach a display monitor to your Jetson, check this guide for \"Headless Mode\".</p>"},{"location":"setup/jetson/#test-inside-jetson-ros-container","title":"Test inside Jetson ROS container","text":"<p>Perform the following in the ROS 2 container.</p> <ol> <li> <p>Set the <code>ROS_DOMAIN_ID</code> environment variable</p> <p>Once you are in container:</p> <pre><code>export ROS_DOMAIN_ID=32\n</code></pre> </li> <li> <p>Check to ensure Create\u00ae 3 topics appear</p> <pre><code>ros2 topic list\n</code></pre> <p>You should get</p> <pre><code>/battery_state\n/cmd_audio\n/cmd_lightring\n/cmd_vel\n/dock\n/hazard_detection\n/imu\n/interface_buttons\n/ir_intensity\n/ir_opcode\n/kidnap_status\n/mouse\n/odom\n/parameter_events\n/rosout\n/slip_status\n/stop_status\n/tf\n/tf_static\n/wheel_status\n/wheel_ticks\n/wheel_vels\n</code></pre> </li> <li> <p>Check if it reads a message on a topic</p> <pre><code>ros2 topic echo battery_state\n</code></pre> <p>You should see continuous repetition of output like the following.</p> <pre><code>header:\n  stamp:\n    sec: 1683568887\n    nanosec: 488023084\n  frame_id: ''\nvoltage: 16.56999969482422\ntemperature: 36.95000076293945\ncurrent: 0.5609999895095825\ncharge: 2.075000047683716\ncapacity: 2.1500000953674316\ndesign_capacity: 2.1500000953674316\npercentage: 0.9700000286102295\npower_supply_status: 0\npower_supply_health: 0\npower_supply_technology: 0\npresent: true\ncell_voltage: []\ncell_temperature: []\nlocation: ''\nserial_number: ''\n---\n</code></pre> </li> </ol>"},{"location":"setup/jetson/#d-set-up-ethernet-over-usb","title":"D. Set up Ethernet over USB","text":"<p>Attention</p> <p>If you chose and performed the above \"Setup Wi-Fi connections\", you can skip this section.</p> <p>If you need a reliable wired communication between Create\u00ae 3 and Jetson\u2122, you can connect them via a USB cable and let them establish a virtual Ethernet connection over the USB data communication.</p> <p>Jetson's upstream USB port (USB-C for the case of Jetson Orin Nano Developer Kit and Micro B for the case of Jetson Xavier Developer Kit) is conveniently set up in such a way to present a virtual network card to the host system, so Create\u00ae 3 and Jetson can form a virtual Ethernet connection over the USB link.</p> <p>However, because Create\u00ae 3 expects the client device to have a specific IP address (<code>192.168.186.3</code>), we need to tweak the Jetson's \"USB Device Mode\" functionality, that is designed to run a DHCP server on Jetson side to assign IP address to other device by default.</p>"},{"location":"setup/jetson/#alter-usb-device-mode-to-apply-static-ip","title":"Alter \"USB Device Mode\" to apply static IP","text":"<ol> <li> <p>To alter the Jetson's \"USB Device Mode\" feature (specifically, disabling DHCP server and self-assign a static IP address);</p> <ol> <li> <p>First, create a flag file to store IP address for Jetson to be used with Create\u00ae 3.</p> <pre><code>sudo bash -c 'echo \"192.168.186.3\" &gt; /opt/nvidia/l4t-usb-device-mode/IP_ADDRESS_FOR_CREATE3_ROBOT.conf'\n</code></pre> </li> <li> <p>Then, modify the \"nv-l4t-device-mode-runtime\" service script (<code>/opt/nvidia/l4t-usb-device-mode/nv-l4t-usb-device-mode-runtime-start.sh</code>). The complete file is here.  </p> </li> </ol> </li> <li> <p>Connect USB cable from Create\u00ae 3 robot to the upstream USB port of Jetson. Then check if the static IP address is set by issuing <code>ifconfig</code> command.</p> <pre><code>$ ifconfig l4tbr0\n\nl4tbr0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 192.168.186.3  netmask 255.255.255.0  broadcast 192.168.186.255\n        inet6 fe80::1  prefixlen 128  scopeid 0x20&lt;link&gt;\n        inet6 fe80::ecb6:edff:feac:7dd5  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether ee:b6:ed:ac:7d:d5  txqueuelen 1000  (Ethernet)\n        RX packets 169  bytes 36206 (36.2 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 1644  bytes 213306 (213.3 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p>Warning</p> <p>Be sure that the USB/BLE toggle on the robot's adapter board is set to the USB position.</p> </li> <li> <p>Check if you can ping Create\u00ae 3 robot</p> <pre><code>ping 192.168.186.2\n</code></pre> <p>Note</p> <p>If you ever want to stop using the Jetson device for Create\u00ae 3 and re-enable the original USB Device Mode feature (so that you can connect to your Windows PC in headless style), you can simply remove the flag file, or execute the following.</p> <p>sudo mv /opt/nvidia/l4t-usb-device-mode/IP_ADDRESS_FOR_CREATE3_ROBOT.conf /opt/nvidia/l4t-usb-device-mode/IP_ADDRESS_FOR_CREATE3_ROBOT.conf.bak</p> </li> </ol>"},{"location":"setup/jetson/#test-the-usb-link-inside-the-container","title":"Test the USB link inside the container","text":"<p>s in the ROS 2 container.</p> <ol> <li> <p>Set the <code>ROS_DOMAIN_ID</code> environmental variable </p> <p>Once you are in container;</p> <pre><code>export ROS_DOMAIN_ID=32\n</code></pre> </li> <li> <p>Set the default network interface by setting Cyclone DDS configuration.</p> <pre><code>export CYCLONEDDS_URI='&lt;CycloneDDS&gt;&lt;Domain&gt;&lt;General&gt;&lt;NetworkInterfaceAddress&gt;l4tbr0&lt;/NetworkInterfaceAddress&gt;&lt;/General&gt;&lt;/Domain&gt;&lt;/CycloneDDS&gt;'\n</code></pre> </li> <li> <p>Check to ensure Create\u00ae 3 topics appear</p> <pre><code>ros2 topic list\n</code></pre> <p>You should get</p> <pre><code>/battery_state\n/cmd_audio\n/cmd_lightring\n/cmd_vel\n/dock\n/hazard_detection\n/imu\n/interface_buttons\n/ir_intensity\n/ir_opcode\n/kidnap_status\n/mouse\n/odom\n/parameter_events\n/rosout\n/slip_status\n/stop_status\n/tf\n/tf_static\n/wheel_status\n/wheel_ticks\n/wheel_vels\n</code></pre> </li> <li> <p>Check if it reads a message on a topic</p> <pre><code>ros2 topic echo battery_state\n</code></pre> <p>You should see continuous repetition of output like following.</p> <pre><code>header:\n  stamp:\n    sec: 1683568887\n    nanosec: 488023084\n  frame_id: ''\nvoltage: 16.56999969482422\ntemperature: 36.95000076293945\ncurrent: 0.5609999895095825\ncharge: 2.075000047683716\ncapacity: 2.1500000953674316\ndesign_capacity: 2.1500000953674316\npercentage: 0.9700000286102295\npower_supply_status: 0\npower_supply_health: 0\npower_supply_technology: 0\npresent: true\ncell_voltage: []\ncell_temperature: []\nlocation: ''\nserial_number: ''\n---\n</code></pre> </li> </ol>"},{"location":"setup/multi-robot/","title":"Using multiple Create\u00ae 3 robots","text":"<p>This page describes how to manage multiple Create\u00ae 3 robots connected to the same Wi-Fi network. Note that if you have multiple robots, but they are not on the same network, then you can ignore this as they are effectively isolated.</p> <p>Attention</p> <p>If you have multiple Create\u00ae 3 robots connected to the same Wi-Fi network it is required to adopt at least one of the following procedures; otherwise, they will not work.</p>"},{"location":"setup/multi-robot/#basic-concepts-on-ros-2-communication","title":"Basic Concepts on ROS 2 Communication","text":"<p>ROS 21 communication is based on the underlying DDS middleware. After two ROS processes discover each other, they will automatically start to communicate if their topics, services, or actions match.</p> <p>The default discovery protocol used by ROS 2 is based on broadcast. This means that when a ROS 2 process is started it will advertise its own discovery messages to all other ROS processes that are connected to the same network.</p> <p>The main advantage of using a broadcast discovery protocol is that as long as your ROS 2 processes are connected to the same network, they will automatically connect to each other and start to communicate. The basic use case does not require any special configuration from the user.</p>"},{"location":"setup/multi-robot/#potential-problems-with-multiple-robots","title":"Potential Problems with Multiple Robots","text":"<p>Having ROS 2 processes automatically start communication is not always a good thing. Usually if two ROS 2 processes that are meant to be executed in isolation start communicating, they will end up mixing up messages between processes without being able to understand if what they are receiving was meant for them or for the other process (or in this case, robot).</p> <p>Important</p> <p>Create\u00ae 3 robots should never communicate with each other.</p> <p>There may be cases where two ROS 2 processes internal to a robot have no intention to communicate, but happen to do so since they have the same topic names and just happen to be under the same network. On the other hand, users with multiple robots running at the same time may want to be able to select to which robot to communicate from their laptop, while still preventing them to communicate between each other.</p> <p>The following sections will describe how to mitigate and solve these problems. Different solutions are presented, as each is suitable for different scenarios.</p>"},{"location":"setup/multi-robot/#ros-2-namespaces","title":"ROS 2 Namespaces","text":"<p>The easiest way to prevent multiple ROS 2 processes from communicating with each other is to use ROS 2 namespaces. As you may know, each ROS 2 entity is uniquely identified by its name (for example the topic named <code>cmd_vel</code> is used to control the robot). By specifying a namespace for a ROS 2 process you are effectively pre-pending a word in front of the name of all the entities created by it.</p> <p>The ROS 2 namespace can be set from the Application \u2192 Configuration menu in the Create\u00ae 3 robot's web server. Note that the namespace name must start with a slash <code>/</code>.</p> <p>If you have two robots and you specify the following namespaces: <code>/robot_1</code> and <code>/robot_2</code> you will then be able to see their individual topics well-separated:</p> <pre><code>$ ros2 topic list\n/robot_1/cmd_vel\n/robot_1/dock\n/robot_1/odom\n...\n/robot_2/cmd_vel\n/robot_2/dock\n/robot_2/odom\n...\n</code></pre> <p>Note that if you want to publish or subscribe to a specific topic, now you have to prepend the appropriate namespace in front of it. For example:</p> <pre><code>$ ros2 topic echo /robot_1/odom\n</code></pre> <p>Using a custom ROS 2 namespace for your robots is the recommended solution if you don't have too many robots or if you have an additional application that needs to communicate with all of them at the same time.</p>"},{"location":"setup/multi-robot/#ros-2-domain-ids","title":"ROS 2 Domain IDs","text":"<p>A different approach for isolating multiple ROS 2 processes consists in specifying the <code>ROS_DOMAIN_ID</code> environment variable.</p> <p>If two processes use a different <code>ROS_DOMAIN_ID</code> value they will be completely isolated from each other, which means that they will not only avoid communication, but they also will not be able to discover each other. You can read more details about this variable in the ROS 2 official documentation.</p> <p>The ROS 2 domain ID can be set from the Application \u2192 Configuration menu in the Create\u00ae 3 robot's web server. Note that the domain ID must be a value between 0 and 101. By default, ROS 2 processes use a <code>ROS_DOMAIN_ID</code> value of 0.</p> <p>If you want to communicate with a specific robot from your laptop, it is required to set the corresponding value for the domain ID. For example:</p> <pre><code>$ export ROS_DOMAIN_ID=42\n$ ros2 topic list\n/cmd_vel\n/dock\n/odom\n...\n</code></pre> <p>Note that a ROS 2 process can only use one domain ID at a time. If needed you can always have multiple robots under the same domain ID and then also add namespaces to prevent them from communicating.</p> <p>Using a custom ROS 2 domain ID for your robots is the recommended solution when you have a large number of robots and you want your tools to communicate only with a subset of them.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/navqplus/","title":"Connect Create\u00ae 3 to NavQPlus and set up ROS 2 Humble","text":"<p>Important</p> <p>This is community-submitted content. Please feel welcome to submit PRs for additions or corrections.</p>"},{"location":"setup/navqplus/#before-you-start","title":"Before you start","text":"<p>Important</p> <p>The NavQPlus Ubuntu 22.04 with ROS 2 Humble image uses CycloneDDS by default, make sure that you either set the iRobot\u00ae Create\u00ae 3's ROS 2 RMW to CycloneDDS or switch the image's .bashrc to use FastDDS.13</p> <p>Attention</p> <p>These directions are written for someone with experience with embedded Linux and basic embedded computers.</p>"},{"location":"setup/navqplus/#step-by-step","title":"Step-by-step","text":"<ol> <li>Download the pre-built latest Ubuntu 22.04 with ROS2 Humble and CycloneDDS image, specifically designed for use with the Create\u00ae 3.</li> <li>Extract the image <code>navqplus-image-&lt;version&gt;.wic</code> from the compressed downloaded file <code>navqplus-image-&lt;version&gt;.wic.bz2</code> and flash it to an SD card or the EMMC.</li> <li>Log in for the first time by connecting to your computer using the USB to UART adatper, ethernet adapter or centermost (USB 2) USB-C\u00ae port.2</li> <li>Configure Wifi, System User Name and Password.</li> <li>Connect NavQPlus to iRobot\u00ae Create\u00ae 3</li> </ol>"},{"location":"setup/navqplus/#flashing-the-sd-card","title":"Flashing the SD card","text":"<p>The NavQPlus comes with a 32GB SD card that you can flash with the pre-built Ubuntu 22.04 image for iRobot\u00ae Create\u00ae 3. See below for instructions to flash your SD card on each platform.</p> <p>Attention</p> <p>You must have an SD card reader available on your system to perform these instructions.</p>"},{"location":"setup/navqplus/#windows","title":"Windows","text":"<p>To flash your SD card with the image you downloaded in step 1, we suggest using Win32DiskImager.</p> <p>Once you have downloaded Win32DiskImager, insert your SD card into your computer, open the program, and select the <code>navqplus-image-&lt;version&gt;.wic</code> file as your image.</p> <p>Next, select your SD card under Device.</p> <p>Attention</p> <p>Be careful and make sure that your Device selection is the drive letter for your SD card. Don't erase your hard drive!</p> <p>Finally, click Write.</p> <p>Once the flashing process has finished, you should get a message saying that the write was successful.</p>"},{"location":"setup/navqplus/#linux-mac","title":"Linux / Mac","text":"<p>To flash your SD card with the image you downloaded in step 1, we suggest using <code>dd</code>.</p> <p>To do this, open a terminal and navigate to the folder that you downloaded the <code>navqplus-image-&lt;version&gt;.wic</code> file.</p> <p>Once you are there, insert your SD card, and find the device path for it. Typically, it will be something like <code>/dev/sdX</code> on Linux or <code>/dev/diskX</code> on Mac.</p> <p>Attention</p> <p>Be careful that you select the correct drive path when using <code>dd</code> to flash your SD card. You can confirm with the \"Disks\" app on Ubuntu or the \"Disk Utility\" app on Mac.</p> <p>Once you have found your device path, run the following command in your terminal to flash the SD card:</p> <p>Linux:</p> <pre><code>sudo dd if=navqplus-image-&lt;version&gt;.wic of=/dev/sdX bs=1M status=progress oflag=sync\n</code></pre> <p>Mac:</p> <pre><code>sudo dd if=navqplus-image-&lt;version&gt;.wic of=/dev/diskX bs=1m status=progress oflag=sync\n</code></pre> <p>Once this is done, your SD card will be flashed with the image. Make sure that your boot switches are set to boot from SD.</p>"},{"location":"setup/navqplus/#flashing-the-emmc","title":"Flashing the eMMC","text":"<p>To flash the eMMC on your NavQPlus, you will need to download UUU, a tool created by NXP to flash NXP boards. Make sure to download the correct application for your platform. The file titled \"uuu\" with no file extension is a binary file for use on x86/64 Linux.</p> <p>Once you have downloaded UUU, find the boot switches on your NavQPlus and flip them to the \"Flash\" mode.</p> <p>Then, connect NavQPlus to your computer using the leftmost (USB 1) USB-C\u00ae port and the two flash status light should light up as shown in the image.  </p> <p>Run the following command to make sure that the NavQPlus is recognized by UUU:</p> <pre><code>./uuu[.exe] -lsusb\n</code></pre> <p></p> <p>You should see that there is a device detected. If so, you can continue flashing. To flash your board, use the command below:</p> <pre><code>./uuu[.exe] -b emmc_all navqplus-image-&lt;version&gt;.bin-flash_evk navqplus-image-&lt;version&gt;.wic\n</code></pre> <p>Once this process has finished, make sure that the flash was successfull by comparing to the image below. If so, configure your boot switches to boot from eMMC.</p> <p></p>"},{"location":"setup/navqplus/#boot-switches","title":"Boot Switches","text":"<p>NavQPlus can be configured to boot from either SD card or eMMC. It also has a flash mode that allows you to flash either the eMMC or SD card over USB-C\u00ae. See the table below for the boot switch configuration.</p> Mode Switch 1 Switch 2 SD ON ON eMMC OFF ON Flash ON OFF"},{"location":"setup/navqplus/#log-in-for-the-first-time","title":"Log in for the first time","text":"<p>Power on the NavQPlus by plugging in a USB-C\u00ae cable to the centermost (USB 2) USB-C\u00ae port. NavQPlus will boot, and you will be able to confirm it has fully booted by observing the LEDs on board. The 3 LEDs by the USB1 port should be on, as well as two LEDs next to the CAN bus connectors.</p> <p>To log into NavQPlus, you can use the included USB to UART adapter, Ethernet, or USB-C\u00ae gadget mode (recommended). The default username/password combo is as follows:</p> <p>Username: user</p> <p>Password: user</p>"},{"location":"setup/navqplus/#usb-to-uart-adapter","title":"USB to UART adapter","text":"<p>Connect the included USB to UART adapter to the UART2 port on the NavQPlus, and open your favorite serial console application. Open a serial console with a baud rate of 115200. Press enter if there is no output on the screen to get a log-in prompt. </p>"},{"location":"setup/navqplus/#ethernet","title":"Ethernet","text":"<p>Connect the included IX Industrial Ethernet cable to NavQPlus, and connect the RJ45 connector to your computer, switch, or router on your local network. You can log into NavQPlus over SSH. The default hostname for NavQPlus is imx8mpnavq. To SSH into NavQPlus, you can run the following command:</p> <pre><code>ssh user@imx8mpnavq.local\n</code></pre>"},{"location":"setup/navqplus/#usb-c-gadget-ethernet","title":"USB-C\u00ae Gadget Ethernet","text":"<p>The IP address of the <code>usb0</code> network interface on NavQPlus is statically assigned to 192.168.186.3. This is necessary to connect to the iRobot\u00ae Create\u00ae 3 out of the box. If you want to use USB-C\u00ae gadget ethernet to connect to NavQPlus, you will need to assign a static IP to your existing gadget ethernet interface on your computer. The network configuration is as follows:</p> <p>IP Address: 192.168.186.2</p> <p>Network Mask: 255.255.255.0</p> <p></p> <p>Once you have set up your USB-C\u00ae gadget ethernet interface on your computer, you can SSH by running:</p> <pre><code>ssh user@imx8mpnavq.local\n</code></pre>"},{"location":"setup/navqplus/#expand-image","title":"Expand Image","text":"<p>The flashed images will need expanding to utilize all the available storage. After logging into the NavQPlus open a terminal and run:</p> <ul> <li>Expand image on the SD:</li> </ul> <pre><code>echo -e \"d\\n2\\nn\\np\\n2\\n196608\\n\\n\\nw\" | sudo fdisk /dev/mmcblk1 &amp;&amp; sudo resize2fs /dev/mmcblk1p2\n</code></pre> <ul> <li>Expand image on the eMMC:</li> </ul> <pre><code>echo -e \"d\\n2\\nn\\np\\n2\\n196608\\n\\n\\nw\" | sudo fdisk /dev/mmcblk2 &amp;&amp; sudo resize2fs /dev/mmcblk2p2\n</code></pre>"},{"location":"setup/navqplus/#configuring-wifi-system-username-and-password","title":"Configuring WiFi, System Username and Password","text":""},{"location":"setup/navqplus/#configuring-wifi-on-navqplus","title":"Configuring WiFi on NavQPlus","text":"<p>To connect NavQPlus to your local WiFi network, you can use the <code>nmtui</code> command. This command presents a GUI in your terminal to connect to WiFi. The interface is relatively straightforward. To run <code>nmtui</code>, run the following command:</p> <pre><code>sudo nmtui\n</code></pre> <p>For a non-GUI way to connect to WiFi or manage your network connections, use <code>nmcli</code> by running the following command:</p> <pre><code>sudo nmcli device wifi connect &lt;network_name&gt; password \"&lt;password&gt;\"\n</code></pre> <p>Once you are finished connecting to your local WiFi network, you can exit the application. Your NavQPlus will continue to connect to this WiFi network even after a reboot.</p>"},{"location":"setup/navqplus/#configuring-system-username-and-password","title":"Configuring System Username and Password","text":"<p>To change the default username and password, use the commands below.</p> <p>Username:</p> <pre><code>usermod -l &lt;new_username&gt; user\nmv /home/user /home/&lt;new_username&gt;\n</code></pre> <p>Password:</p> <pre><code>passwd\n</code></pre>"},{"location":"setup/navqplus/#connecting-to-irobot-create-3","title":"Connecting to iRobot\u00ae Create\u00ae 3","text":"<p>Once you have set up your NavQPlus to connect to your local WiFi network, you can now connect it to the iRobot\u00ae Create\u00ae 3. Simply connect a USB-C\u00ae cable between NavQPlus's centermost (USB 2) USB-C\u00ae port and the USB-C\u00ae port internal to the iRobot\u00ae Create\u00ae 3. Your NavQPlus and iRobot\u00ae Create\u00ae 3 will now be communicating over CycloneDDS for ROS2! SSH into your NavQPlus over WiFi by running:</p> <pre><code>ssh &lt;your-username&gt;@imx8mpnavq.local\n</code></pre> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/network-config/","title":"Network Recommendations","text":"<p>This page details the recommendations for network settings to communicate with the Create\u00ae 3 robot via a network. </p>"},{"location":"setup/network-config/#wi-fi-networks","title":"Wi-Fi Networks","text":"<p>There are several Wi-Fi configurations that must be in place to properly communicate with the Create\u00ae 3 robot via a Wi-Fi network.  Below are the currently supported configurations. </p>"},{"location":"setup/network-config/#supported-configurations","title":"Supported Configurations","text":"<p>Authentication: open (no password required) or shared key (password only) </p> <p>Frequency: 2.4 GHz</p>"},{"location":"setup/network-config/#troubleshooting","title":"Troubleshooting","text":"<p>The ROS 2 node discovery process that is handled by the ROS 2 Middleware (RMW) can be network intensive, but there are several options to mitigate excess traffic and ensure your Create\u00ae 3 robot can operate on your Wi-Fi network. </p>"},{"location":"setup/network-config/#disable-multicasting","title":"Disable Multicasting","text":"<p>Both supported RMWs (Fast and Cyclone) require multicasting to be enabled on your Wi-Fi network by default.  However, multicasting is often disabled on enterprise networks, and the creators of Fast DDS recommend disabling multicasting when operating on a Wi-Fi network.   </p> <p>A complete overview of the multicast disabling process for both RMWs is outlined on the ROS 2 Middleware Configuration page. </p>"},{"location":"setup/network-config/#dedicated-network","title":"Dedicated Network","text":"<p>In cases where multiple robots will be using a busy network (e.g., university or corporate networks) or the existing network configuration is non-functional, creating a dedicated network for your Create\u00ae 3 robot can mitigate most issues. </p>"},{"location":"setup/network-config/#ethernet-over-usb","title":"Ethernet Over USB","text":"<p>The Create\u00ae 3 robot has a USB-C\u00ae port that allows for ethernet network connectivity over USB. To utilize this connection, switch the USB/BLE toggle on the robot to the USB position. When you switch this toggle, the blue light on the adapter board will turn off, but the yellow and orange lights will remain on. </p> <p></p> <p>This setup requires a USB-C\u00ae to ethernet adapter connected to the Create\u00ae 3 robot and then connected to an ethernet cable.  On the other end of the ethernet cable, connect another ethernet to USB adapter which can be connected directly to your computer. </p> <p></p> <p>Important</p> <p>If the yellow and orange lights on the adapter board turn off during this process, this means your adapter board has disconnected from the Create\u00ae 3 robot. The adapter board can easily be re-attached by sliding it back into the designated slot. </p> <p>On your computer, navigate to your wired connection and change you IPv4 method to <code>manual</code> and input an address of <code>192.168.186.3</code> and a netmask of <code>255.255.0.0</code>.  </p> <p>You can check to confirm the connection is functional by navigating to <code>192.168.186.2</code> in your web browser. If all is working properly, the iRobot\u00ae Create\u00ae 3 Webserver will load. </p> <p>Important</p> <p>This connection type will mean that your Create\u00ae 3 robot is physically attached to your computer, which is not practical for many applications.  However, this can be a useful tool when troubleshooting. </p>"},{"location":"setup/network-config/#virtual-machines","title":"Virtual Machines","text":"<p>As noted in the ROS 2 Galactic and Humble installation instructions, it is possible to install Ubuntu 20.04 or 22.04 in a virtualized container if your machine is natively running another operating system.  There are three possible ways to communicate over a network between a <code>virtual machine (VM)</code> and the Create\u00ae 3 robot using ROS 2. </p> <p>Important</p> <p>Any time you change your network configuration settings on your virtual machine, you should restart the virtual machine before attempting to confirm connectivity.</p>"},{"location":"setup/network-config/#option-1-recommended-bridged-network-connection","title":"Option 1 (Recommended) Bridged Network Connection","text":"<p>While many virtualization applications default to a \"shared\" or \"NAT\" network connection, this type of connection will not allow ROS 2 to communicate with the Create\u00ae 3 robot.  Instead, a bridged network connection should be used for the virtual machine. This does require that your Wi-Fi network allows for bridged connections.  Many enterprise networks prevent bridging and it is recommended you speak with your network administrator to confirm whether bridging is enabled on these networks. </p> <p>Attention</p> <p>If you have confirmed your network allows bridged connections, but you are unable to pull a topic list, you may need to disable multicasting. Instructions on how to disable multicasting can be found on the RMW Configuration page.</p>"},{"location":"setup/network-config/#option-2-usb-wi-fi-network-adapter","title":"Option 2 USB Wi-Fi Network Adapter","text":"<p>If you are experiencing difficulty with a bridged network connection, a stable alternative is to provide your virtual machine with its own dedicated network adapter.  This can be done by purchasing a USB Wi-Fi network adapter that is compatible with Ubuntu.  Once you plug the USB Wi-Fi network adapter into your computer, assign the USB device to be used by the VM only and this should enable you to select and connect to a Wi-Fi network directly within your VM.</p> <p>Important</p> <p>For reliable functionality, you must disconnect your bridged connection between your VM and your computer when using the USB Wi-Fi network adapter.  Failure to do so will result in intermittent connection difficulties as the VM attempts to connect to both networks. </p>"},{"location":"setup/network-config/#option-3-advanced-bridged-network-connnection-with-mac-address-mirroring","title":"Option 3 (Advanced) Bridged Network Connnection with MAC Address Mirroring","text":"<p>In the event Option 1 did not work on your network, it may still be possible to communicate between your virtual machine and your Create\u00ae 3 robot on the same network attempted in Option 1.  Typically, a bridged network connection asks your network to assign a new IP address to your virtual machine, which has its own unique MAC address.  Security and authentication settings on some networks may reject this request.  A possible work around is to assign your virtual machine the same MAC address as your computer's network adapter.  Within your virtualization application under network settings, there should be an advanced network settings option that allows you to modify the existing MAC address.  Entering your computer's network adapter MAC address in this field will mirror the MAC address on your virtual machine. </p> <p>Attention</p> <p>This work around will likely result in the loss of internet connection on your computer.</p>"},{"location":"setup/network-config/#option-4-advanced-ethernet-over-usb","title":"Option 4 (Advanced) Ethernet Over USB","text":"<p>Follow the instructions outlined in the Ethernet Over USB section above but assign the USB device to your virtual machine as instructed in Option 3. </p> <p>Important</p> <p>This connection type will mean that your Create\u00ae 3 robot is physically attached to your computer, which is not practical for many applications.  However, this can be a useful tool when troubleshooting. </p>"},{"location":"setup/pi4/","title":"Pi4","text":"<p>This page has moved.  Ubuntu 20.04 and Galactic setup instructions are now located here. Ubuntu 22.04 and Humble setup instructions are now located here. </p>"},{"location":"setup/pi4galactic/","title":"Connect Create\u00ae 3 to Raspberry Pi\u00ae 4 and set up ROS 2 Galactic","text":""},{"location":"setup/pi4galactic/#before-you-start","title":"Before you start","text":"<p>Attention</p> <p>These directions are written for someone with experience with embedded Linux and basic embedded computers.</p> <p>It is highly recommended to read through the following documents before beginning:</p> <ul> <li>How to install Ubuntu Server on your Raspberry Pi1 - official Canonical documentation</li> <li>Installing ROS 2 on Ubuntu Linux1 - official Open Robotics documentation</li> </ul>"},{"location":"setup/pi4galactic/#step-by-step","title":"Step-by-step","text":"<ol> <li>Download Ubuntu\u00ae Server 20.04 64-bit1 and write onto a microSD card.</li> <li>In the system-boot partition, edit usercfg.txt and add <code>dtoverlay=dwc2,dr_mode=peripheral</code>. For convenience, here's a copy of this file.</li> <li>In the system-boot partition, edit cmdline.txt to add <code>modules-load=dwc2,g_ether</code> after <code>rootwait</code>. For convenience, here's a copy of this file.</li> <li> <p>In the system-boot partition, edit network-config to optionally add information about your Wi-Fi connection, and also add the following under <code>ethernets</code></p> <pre><code>        usb0:\n            dhcp4: false\n            optional: true\n            addresses: [192.168.186.3/24]\n</code></pre> <p>For convenience, here's a copy of this file. Be sure to remove the <code>.txt</code> extension. Note that the robot uses the default IP address of 192.168.186.2 on its usb0 interface. Please note also that after initial boot, editing <code>network-config</code> in the boot partition will not do anything; instead, the file to edit can be found at <code>/etc/netplan/50-cloud-init.yaml</code>.</p> </li> <li> <p>If you would like your Raspberry Pi\u00ae 43 to communicate with the Create\u00ae 3 over its USB-C\u00ae2 port (and not just to power it), be sure that the USB/BLE toggle on the robot's adapter board is set to the USB position.</p> </li> <li> <p>Insert the microSD card into the Raspberry Pi\u00ae 43, and then use a USB-C\u00ae2 to USB-C\u00ae2 cable to connect the Raspberry Pi\u00ae 43 to the Create\u00ae 3. A photo of this connection can be found here. The first boot may take a few minutes. (It may help to have a monitor and keyboard set up in case of any trouble on the first boot.)</p> </li> <li> <p>Log in with the default username and password (ubuntu/ubuntu), change your password, and then change your locale to be one that uses UTF-8. For example, in the US, type</p> <pre><code>sudo apt update\nsudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> </li> <li> <p>Then, execute the following blocks of commands to install ROS 24:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install -y curl gnupg2 lsb-release build-essential git cmake\n</code></pre> <p>then</p> <pre><code>sudo curl -ksSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\nsudo apt update &amp;&amp; sudo apt install -y ros-galactic-ros-base python3-colcon-common-extensions python3-rosdep ros-galactic-rmw-fastrtps-cpp ros-galactic-rmw-cyclonedds-cpp ros-galactic-irobot-create-msgs\n</code></pre> <p>finally</p> <pre><code>echo \"source /usr/share/colcon_cd/function/colcon_cd.sh\" &gt;&gt; ~/.bashrc\necho \"export _colcon_cd_root=/opt/ros/galactic/\" &gt;&gt; ~/.bashrc\necho \"source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash\" &gt;&gt; ~/.bashrc\necho \"source /opt/ros/galactic/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>At this point, we recommend setting your default RMW. The RMW you set here has to match the RMW on your robot, which can be found from its Application Configuration page. More detail on RMW can be found here. Right now, the Create\u00ae 3 robot supports <code>rmw_cyclonedds_cpp</code> and <code>rmw_fastrtps_cpp</code>. The default for Galactic is <code>rmw_cyclonedds_cpp</code>. Depending on your robot's RMW implementation, type one of the following:</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> <p>or</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>Log out and log back in. Once you do, test things out with a <code>ros2 topic list</code>. A full Create\u00ae 3 API description can be found here.</p> <p>Attention</p> <p>If you are using CycloneDDS (Galactic default), your Raspberry Pi\u00ae may be running with multiple network interfaces (usb0 to talk to robot and wlan0 to talk to laptop). You will need to export a path on the Raspberry Pi\u00ae to an xml config file that registers those interfaces in the CYCLONEDDS_URI. See CycloneDDS Multiple Network Interfaces.</p> </li> </ol> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Raspberry Pi\u00ae is a trademark of Raspberry Pi Trading. All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/pi4humble/","title":"Connect Create\u00ae 3 to Raspberry Pi\u00ae 4 and set up ROS 2 Humble","text":"<p>Note</p> <p>As of March 2023, use of Galactic is recommended, as it is more performant than Humble on Create 3.</p>"},{"location":"setup/pi4humble/#before-you-start","title":"Before you start","text":"<p>Attention</p> <p>These directions are written for someone with experience with embedded Linux and basic embedded computers.</p> <p>It is highly recommended to read through the following documents before beginning:</p> <ul> <li>How to install Ubuntu Server on your Raspberry Pi1 - official Canonical documentation</li> <li>Installing ROS 2 on Ubuntu Linux1 - official Open Robotics documentation</li> </ul>"},{"location":"setup/pi4humble/#step-by-step","title":"Step-by-step","text":"<ol> <li> <p>Download and install the appropriate version of the Raspberry Pi Imager on your computer.</p> </li> <li> <p>Open the imager and under operating system, select \"Other general-purpose OS\" then \"Ubuntu\" and finally, \"Ubuntu Server 22.04 LTS (64-bit)\".</p> </li> <li> <p>Insert your microSD card into your computer and under storage in the Raspberry Pi Imager, select your microSD card.</p> </li> <li> <p>Select the gear icon to optionally customize advanced options including enabling SSH, setting a unique username and password, and configuring a wireless LAN. It is recommended to uncheck the \"Eject media when finished\" box in advanced options so you can edit the necessary files in the following steps without re-inserting the SD card.</p> </li> <li> <p>Once all options have been selected, click the \"WRITE\" button to write the image to your SD card.</p> </li> <li> <p>In the system-boot partition, edit config.txt and add <code>dtoverlay=dwc2,dr_mode=peripheral</code> at the end of the file.</p> </li> <li> <p>In the system-boot partition, edit cmdline.txt to add <code>modules-load=dwc2,g_ether</code> after <code>rootwait</code>.</p> </li> <li> <p>In the system-boot partition, edit the <code>network-config</code> executable to optionally add information about your Wi-Fi connection, and also add the following under <code>ethernets</code></p> <pre><code>        usb0:\n            dhcp4: false\n            optional: true\n            addresses: [192.168.186.3/24]\n</code></pre> <p>For convenience, here's a copy of this file. Be sure to remove the <code>.txt</code> extension. Note that the robot uses the default IP address of 192.168.186.2 on its usb0 interface. Please note also that after initial boot, editing <code>network-config</code> in the boot partition will not do anything; instead, you will need to edit <code>/etc/netplan/50-cloud-init.yaml</code>. After editing that file, you will need to run <code>sudo netplan generate</code> followed by <code>sudo netplan apply</code> to update your network configuration.</p> </li> <li> <p>If you would like your Raspberry Pi\u00ae 43 to communicate with the Create\u00ae 3 over its USB-C\u00ae2 port (and not just to power it), be sure that the USB/BLE toggle on the robot's adapter board is set to the USB position.</p> </li> <li> <p>Insert the microSD card into the Raspberry Pi\u00ae 43, and then use a USB-C\u00ae2 to USB-C\u00ae2 cable to connect the Raspberry Pi\u00ae 43 to the Create\u00ae 3. A photo of this connection can be found here. The first boot may take a few minutes. (It may help to have a monitor and keyboard set up in case of any trouble on the first boot.)</p> <p>Attention</p> <p>If you are new to ROS 2 and would like to utilize the turtlesim tutorials, it necessary to install a desktop environment to do this. We have had success with xubuntu which can be installed with the following command: <code>sudo apt install xubuntu-desktop</code>. Please see the Ubuntu docs for more details.</p> </li> <li> <p>Log in with the default username and password (ubuntu/ubuntu), change your password, and then change your locale to be one that uses UTF-8. For example, in the US, type</p> <pre><code>sudo apt update\nsudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> </li> <li> <p>Then, execute the following blocks of commands to install ROS 24:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install -y curl gnupg2 lsb-release build-essential git cmake\n</code></pre> <p>then</p> <pre><code>sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\nsudo apt update\n</code></pre> <p>then</p> <pre><code>sudo apt install -y ros-humble-desktop\nsudo apt install -y ros-humble-irobot-create-msgs\nsudo apt install -y build-essential python3-colcon-common-extensions python3-rosdep ros-humble-rmw-cyclonedds-cpp\n</code></pre> <p>finally</p> <pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>At this point, we recommend setting your default RMW. The RMW you set here has to match the RMW on your robot, which can be found from its Application Configuration page. More detail on RMW can be found here. Depending on your robot's RMW implementation, type one of the following:</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> <p>or</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>Log out and log back in. Once you do, test things out with a <code>ros2 topic list</code>. A full Create\u00ae 3 API description can be found here.</p> <p>Attention</p> <p>If you are using CycloneDDS, your Raspberry Pi\u00ae may be running with multiple network interfaces (usb0 to talk to robot and wlan0 to talk to laptop). You will need to export a path on the Raspberry Pi\u00ae to an xml config file that registers those interfaces in the CYCLONEDDS_URI. See CycloneDDS Multiple Network Interfaces.</p> </li> </ol> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Raspberry Pi\u00ae is a trademark of Raspberry Pi Trading. All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/provision/","title":"Connect Create\u00ae 3 to Wi-Fi","text":""},{"location":"setup/provision/#the-basics","title":"The Basics","text":"<p>Follow the main guide for getting started here.</p>"},{"location":"setup/provision/#select-rmw-implementation","title":"Select RMW Implementation","text":"<p>If you are planning to use ROS 21, make sure you have selected the matching RMW (ROS 2 middleware) implementation as the rest of the nodes in your system. This can be found in the Application \u2192 Configuration menu in the Create\u00ae 3 robot's web server, shown in the below image.</p> <p></p> <p>The default RMW for ROS 2 Galactic is Cyclone DDS. Be sure to click \"save\" after making any changes, and then restart the application.</p> <p>Attention</p> <p>As of Create 3 software version G.2.2, there is a memory leak in Cyclone DDS that can cause the robot to reboot after a few hours of use. Please monitor this issue for further information. Fast-DDS does not have this problem.</p> <p>See ROS 2 Middleware Config for more information about RMW specific choices and configuration requirements.</p> <p>A detailed rundown of the features of the robot webserver can be found on the Application page.</p>"},{"location":"setup/provision/#using-multiple-robots","title":"Using Multiple Robots","text":"<p>Important</p> <p>If you plan to use multiple Create\u00ae 3 robots connected to the same Wi-Fi network, then you must follow the Multi-Robot Setup documentation</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/ubuntu2004/","title":"Install ROS 2 Galactic with Create 3 Messages on an Ubuntu 20.04 Machine","text":""},{"location":"setup/ubuntu2004/#before-you-start","title":"Before you start","text":"<p>These directions should work on a machine natively running Ubuntu1 20.04, as well as in a virtualized container within another operating system. Note that there might be some network setup required if in a virtualized container; for example, RMWs seem to like running in a bridged network configuration rather than a NATted one.</p> <p>These directions follow Open Robotics' official documentation on Installing ROS 2 on Ubuntu Linux, and more detailed information about what the commands below do can be found there.</p> <p>Important</p> <p>Some single board computers may have board specific instructions that differ from the step-by-step process outlined below.  These instructions are available for the NVIDIA\u00ae Jetson\u2122 and Raspberry Pi\u00ae 4.</p>"},{"location":"setup/ubuntu2004/#step-by-step","title":"Step-by-step","text":"<ol> <li> <p>If you haven't already, download and install Ubuntu\u00ae Server 20.04 64-bit onto your machine.</p> </li> <li> <p>Once logged in, check to ensure that you are using a UTF-8 locale by typing</p> <pre><code>echo $LANG\n</code></pre> <p>and ensuring \"UTF-8\" is at the end of the returned string.</p> </li> <li> <p>Execute the following blocks of commands to install ROS 22:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install -y curl gnupg2 lsb-release build-essential git cmake\n</code></pre> <p>then</p> <pre><code>sudo curl -ksSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\nsudo apt update &amp;&amp; sudo apt install -y ros-galactic-ros-base python3-colcon-common-extensions python3-rosdep ros-galactic-rmw-fastrtps-cpp ros-galactic-rmw-cyclonedds-cpp ros-galactic-irobot-create-msgs\n</code></pre> <p>finally</p> <pre><code>echo \"source /usr/share/colcon_cd/function/colcon_cd.sh\" &gt;&gt; ~/.bashrc\necho \"export _colcon_cd_root=/opt/ros/galactic/\" &gt;&gt; ~/.bashrc\necho \"source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash\" &gt;&gt; ~/.bashrc\necho \"source /opt/ros/galactic/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>At this point, we recommend setting your default RMW (ROS 2 middleware). The RMW you set here has to match the RMW on your robot, which can be found from its Application Configuration page. More detail on RMW can be found here. Right now, the Create\u00ae 3 robot supports <code>rmw_cyclonedds_cpp</code> and <code>rmw_fastrtps_cpp</code>. The default for Galactic is <code>rmw_cyclonedds_cpp</code>. Depending on your robot's RMW implementation, type one of the following:</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> <p>or</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>Finally, either log out and log back in, or simply</p> <pre><code>source ~/.bashrc\n</code></pre> </li> <li> <p>If both your computer and robot are on the same network, you should now be able to test things out with a <code>ros2 topic list</code>. If this does not work, please refer to ROS 2 Network Configuration for further configuration ideas. A full Create\u00ae 3 API description can be found here.</p> </li> </ol> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/ubuntu2204/","title":"Install ROS 2 Humble with Create 3 Messages on an Ubuntu 22.04 Machine","text":"<p>Note</p> <p>As of March 2023, use of Galactic is recommended, as it is more performant than Humble on Create 3.</p>"},{"location":"setup/ubuntu2204/#before-you-start","title":"Before you start","text":"<p>These directions should work on a machine natively running Ubuntu1 22.04, as well as in a virtualized container within another operating system. Note that there might be some network setup required if in a virtualized container; for example, RMWs seem to like running in a bridged network configuration rather than a NATted one.</p> <p>These directions follow Open Robotics' official documentation on Installing ROS 2 on Ubuntu Linux, and more detailed information about what the commands below do can be found there.</p> <p>Important</p> <p>Some single board computers may have board specific instructions that differ from the step-by-step process outlined below. These instructions are available for the NavQPlus and Raspberry Pi\u00ae 4.</p>"},{"location":"setup/ubuntu2204/#step-by-step","title":"Step-by-step","text":"<ol> <li> <p>If you haven't already, download and install Ubuntu\u00ae 22.04 64-bit onto your machine. You may choose either the desktop (for a GUI) or server (for console-only) install.</p> </li> <li> <p>Once logged in, check to ensure that you are using a UTF-8 locale by typing</p> <pre><code>echo $LANG\n</code></pre> <p>and ensuring \"UTF-8\" is at the end of the returned string.</p> </li> <li> <p>Ensure that the Ubuntu Universe repository is enabled by checking the output of this command:</p> <pre><code>apt-cache policy | grep universe\n</code></pre> <p>which should output a line like</p> <pre><code>500 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 Packages\n  release v=22.04,o=Ubuntu,a=jammy,n=jammy,l=Ubuntu,c=universe,b=amd64\n</code></pre> <p>If it does not, execute the following:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install software-properties-common &amp;&amp; sudo add-apt-repository universe\n</code></pre> </li> <li> <p>Add the ROS 22 apt repository, first by authorizing the Open Robotics GPG key</p> <pre><code>sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>and then adding the repository to your computer's sources list</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre> </li> <li> <p>Make sure your other packages are up to date</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade\n</code></pre> </li> <li> <p>And then install ROS 2. If you have a graphical user environment, use</p> <pre><code>sudo apt install -y ros-humble-desktop\n</code></pre> <p>otherwise just use the base (barebones) install</p> <pre><code>sudo apt install -y ros-humble-ros-base\n</code></pre> </li> <li> <p>Next add the Create\u00ae 3 messages:</p> <pre><code>sudo apt install -y ros-humble-irobot-create-msgs\n</code></pre> </li> <li> <p>We also recommend installing a few other packages:</p> <pre><code>sudo apt install -y build-essential python3-colcon-common-extensions python3-rosdep ros-humble-rmw-cyclonedds-cpp\n</code></pre> </li> <li> <p>In order to have your environment ready to go, we recommend auto-running the following when you open a new session:</p> <pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>At this point, we recommend setting your default RMW (ROS 2 middleware). The RMW you set here has to match the RMW on your robot, which can be found from its Application Configuration page. More detail on RMW can be found here. Right now, the Create\u00ae 3 robot supports <code>rmw_cyclonedds_cpp</code> and <code>rmw_fastrtps_cpp</code>. The default for Humble is <code>rmw_fastrtps_cpp</code>. Depending on your robot's RMW implementation, type one of the following:</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> <p>or</p> <pre><code>echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" &gt;&gt; ~/.bashrc\n</code></pre> </li> <li> <p>Finally, either log out and log back in, or simply</p> <pre><code>source ~/.bashrc\n</code></pre> </li> <li> <p>If both your computer and robot are on the same network, you should now be able to test things out with a <code>ros2 topic list</code>. If this does not work, please refer to ROS 2 Network Configuration for further configuration ideas. A full Create\u00ae 3 API description can be found here.</p> </li> </ol> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/xml-config/","title":"ROS 2 Middleware (RMW) Configuration","text":"<p>ROS 21 is built on top of DDS/RTPS as its middleware, which provides advanced networking features such as: discovery, serialization and transportation.  This ROS 2 middleware is abbreviated RMW for short.</p> <p>This page contains some examples that may be useful when interacting with the iRobot\u00ae Create\u00ae 3.</p> <p>Important</p> <p>Depending on the ROS 2 RMW used, the syntax for configuring the network will be different.  We recommend to visit the RMW vendor documentation for more details.</p> <p>You can choose a RMW implementation on your machine using</p> <pre><code>export RMW_IMPLEMENTATION=name-of-the-RMW\n</code></pre> <p>Currently, the only supported RMW implementations are: <code>rmw_cyclonedds_cpp</code> and <code>rmw_fastrtps_cpp</code>.  See here for more info on the different RMW vendors.</p> <p>If you are using a bash shell (default on Ubuntu), you can set a default RMW adding the above line to your <code>.bashrc</code> file.  You may have already set a default RMW in this file if you followed our ROS 2 Galactic or ROS 2 Humble installation instructions; in that case, you can change the name of the RMW by editing your <code>.bashrc</code> file using your preferred text editor.  Nano is an option for a text editor that is standard on most Ubuntu installations. You can also install it using</p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install nano\n</code></pre> <p>Then the file can be opened and edited</p> <pre><code>nano ~/.bashrc\n</code></pre> <p>Then scroll to the bottom of the file and replace the current <code>name-of-the-rmw</code> with either <code>rmw_cyclonedds_cpp</code> and <code>rmw_fastrtps_cpp</code>. Once you've changed the RMW, press <code>Ctrl-X</code> to exit nano and save the file. Finally, either log out and log back in, or simply</p> <pre><code>source ~/.bashrc\n</code></pre> <p>On the robot the same can be controlled through the Create\u00ae 3 webserver.</p> <p>Important</p> <p>Always make sure that all the ROS 2 processes you are using have selected the same RMW implementation.</p>"},{"location":"setup/xml-config/#fast-dds","title":"Fast-DDS","text":"<p>Fast-DDS allows to specify DDS configuration through an XML file. In order to apply a configuration, the path to the XML file must be provided through the following environment variable:</p> <pre><code>export FASTRTPS_DEFAULT_PROFILES_FILE=/path/to/the/xml/profile\n</code></pre> <p>Detailed network configurations are described in the Fast-DDS documentation.</p>"},{"location":"setup/xml-config/#multiple-network-interfaces","title":"Multiple Network Interfaces","text":"<p>Fast-DDS supports multiple network interfaces out of the box. A ROS 2 process will automatically use all the interfaces that were available when it started (it will not use network interfaces activated while the process was already running).</p>"},{"location":"setup/xml-config/#disable-multicast","title":"Disable Multicast","text":"<p>Some networks (e.g., academic or corporate Wi-Fi) may block the multicast packets used by ROS 2 by default. The following XML profile can be used on your laptop (or compute board) to force using unicast and directly connect to the IP address of your robot.</p> <p>The file must be edited replacing <code>ROBOT_IP</code> with the actual IP value.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;profiles xmlns=\"http://www.eprosima.com/XMLSchemas/fastRTPS_Profiles\"&gt;\n   &lt;participant profile_name=\"unicast_connection\" is_default_profile=\"true\"&gt;\n       &lt;rtps&gt;\n           &lt;builtin&gt;\n               &lt;metatrafficUnicastLocatorList&gt;\n                   &lt;locator/&gt;\n               &lt;/metatrafficUnicastLocatorList&gt;\n               &lt;initialPeersList&gt;\n                   &lt;locator&gt;\n                       &lt;udpv4&gt;\n                           &lt;address&gt;ROBOT_IP&lt;/address&gt;\n                       &lt;/udpv4&gt;\n                   &lt;/locator&gt;\n               &lt;/initialPeersList&gt;\n           &lt;/builtin&gt;\n       &lt;/rtps&gt;\n   &lt;/participant&gt;\n&lt;/profiles&gt;\n</code></pre>"},{"location":"setup/xml-config/#cyclonedds","title":"CycloneDDS","text":"<p>CycloneDDS allows to specify DDS configuration through an XML file. In order to apply a configuration, the path to the XML file must be provided through the following environment variable:</p> <pre><code>export CYCLONEDDS_URI=/path/to/the/xml/profile\n</code></pre> <p>Detailed network configurations are described in the CycloneDDS documentation.</p>"},{"location":"setup/xml-config/#multiple-network-interfaces_1","title":"Multiple Network Interfaces","text":"<p>This feature requires CycloneDDS version 0.8.0 or higher. Use the following XML profile specifying the name of all the network interfaces you want to use. For example <code>usb0</code> and <code>wlan0</code> in this example.</p> <pre><code>&lt;CycloneDDS&gt;\n   &lt;Domain&gt;\n     &lt;General&gt;\n        &lt;NetworkInterfaceAddress&gt;usb0,wlan0&lt;/NetworkInterfaceAddress&gt;\n    &lt;/General&gt;\n   &lt;/Domain&gt;\n&lt;/CycloneDDS&gt;\n</code></pre> <p>Note that the specified network interfaces must be already active when the ROS 2 process is started.</p> <p>Attention</p> <p>If the robot is running with a Compute Board like a Raspberry Pi\u00ae or an NVIDIA\u00ae Jetson\u2122 connected via USB, then the robot is using a multiple interface CycloneDDS config file to communicate both over usb0 and wlan0. We have found that with CycloneDDS version 0.8.1, for an Ubuntu laptop to see the robot topics with CycloneDDS when running multiple interfaces, the laptop must use the configuration option:</p> <pre><code>&lt;CycloneDDS&gt;\n   &lt;Domain&gt;\n     &lt;General&gt;\n        &lt;DontRoute&gt;true&lt;/DontRoute&gt;\n    &lt;/General&gt;\n   &lt;/Domain&gt;\n&lt;/CycloneDDS&gt;\n</code></pre>"},{"location":"setup/xml-config/#disable-multicast_1","title":"Disable Multicast","text":"<p>Some networks (e.g. corporate WiFi) may block the multicast packets used by ROS 2 by default. The following XML profile can be used on your laptop (or compute board) to force using unicast and directly connect to the IP address of your robot.</p> <p>The file must be edited replacing <code>${ROBOT_IP}</code> with the actual IP value, or exporting the value as an environment variable.</p> <pre><code>&lt;CycloneDDS&gt;\n  &lt;Domain&gt;\n    &lt;Id&gt;any&lt;/Id&gt;\n    &lt;General&gt;\n      &lt;NetworkInterfaceAddress&gt;auto&lt;/NetworkInterfaceAddress&gt;\n      &lt;AllowMulticast&gt;false&lt;/AllowMulticast&gt;\n      &lt;EnableMulticastLoopback&gt;true&lt;/EnableMulticastLoopback&gt;\n    &lt;/General&gt;\n    &lt;Discovery&gt;\n      &lt;ParticipantIndex&gt;0&lt;/ParticipantIndex&gt;\n      &lt;Peers&gt;\n        &lt;Peer Address=\"${ROBOT_IP}:7410\"/&gt;\n      &lt;/Peers&gt;\n    &lt;/Discovery&gt;\n  &lt;/Domain&gt;\n&lt;/CycloneDDS&gt;\n</code></pre> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> </ol>"},{"location":"sim/setup/","title":"Using the iRobot\u00ae Create\u00ae 3 Simulator","text":"<p>We provide a ROS 2 Gazebo simulation stack for the iRobot\u00ae Create\u00ae 3 Educational Robot. Have a look at its Github repository. The Github repository contains instructions for how to building and running the simulator on your laptop.</p> <p>This application completely simulates a Create\u00ae 3 robot, thus exposing to the user all the same ROS 2 APIs as the real robot.</p> <p>You will be able to use the iRobot\u00ae Create\u00ae 3 Simulator to quickly develop your new applications and eventually run them on the real robot without having to change anything.</p>"},{"location":"webserver/about/","title":"iRobot\u00ae Create\u00ae 3 Webserver - About","text":"<p>The about page includes details about the state at the operating system level.</p> <p></p>"},{"location":"webserver/about/#ip-address","title":"IP Address","text":"<p>This is the dotted octet IP address currently used to access this page.</p>"},{"location":"webserver/about/#version","title":"Version","text":"<p>This is the raw version string of the firmware currently loaded on the robot.</p>"},{"location":"webserver/about/#sku","title":"SKU","text":"<p>This is the SKU that iRobot uses to identify the Create\u00ae 3 robot.</p>"},{"location":"webserver/about/#battery","title":"Battery","text":"<p>This includes both the percentage charge of the robot's smart battery, as well as the current capacity in milliamp-hours.</p>"},{"location":"webserver/about/#properties","title":"Properties","text":"<p>This section includes iRobot-specific diagnostic information about this robot.</p>"},{"location":"webserver/about/#date","title":"Date","text":"<p>The current date and time on the robot.</p>"},{"location":"webserver/about/#uptime","title":"Uptime","text":"<p>The amount of time since this robot's last reboot.</p>"},{"location":"webserver/about/#memory","title":"Memory","text":"<p>Total RAM and swap space available on the robot.</p>"},{"location":"webserver/about/#ifconfig","title":"ifconfig","text":"<p>Output of the <code>ifconfig</code> command, including information for all available Ethernet interfaces. These may include <code>lo</code>, <code>usb0</code>, <code>wlan0</code>, and/or <code>wlan1</code> depending on the state of the robot. Note that <code>wlan0</code> and <code>wlan1</code> are the same physical device, except that <code>wlan0</code> is used when the robot is a station, and <code>wlan1</code> is used when it is an access point.</p>"},{"location":"webserver/about/#hciconfig","title":"hciconfig","text":"<p>Output of the <code>hciconfig</code> command, including information for all available Bluetooth\u00ae1 interfaces. This will be blank when the USB/BLE toggle on the adapter board is set to USB.</p>"},{"location":"webserver/about/#factory-reset","title":"Factory Reset","text":"<p>A hyperlink to factory reset the robot will appear when the robot is in access point mode. This will remove all user configuration, but the firmware version will not change.</p> <ol> <li> <p>The Bluetooth\u00ae word mark and logos are registered trademarks owned by Bluetooth SIG, Inc. and any use of such marks by iRobot is under license.\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/application/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Application","text":"<p>The Application menu normally has two options: \"Configuration\" and \"Restart Application.\" When the robot is acting as an access point, a third option, \"Reboot robot,\" appears.</p>"},{"location":"webserver/application/#restart-application","title":"Restart Application","text":"<p>Clicking \"Restart Application\" will restart the robot's ROS 21 application. This will take a few seconds to complete. Restarting the application is necessary after modifying ROS 2 configuration settings. Restarting the application will not restart the webserver; they are separate applications.</p>"},{"location":"webserver/application/#reboot-robot","title":"Reboot Robot","text":"<p>Clicking \"Reboot Robot\" will completely reboot the robot. This will take multiple minutes to complete.</p>"},{"location":"webserver/application/#application-configuration","title":"Application Configuration","text":"<p>There are two configuration sections on this page. After saving either section, it is required to restart the application for changes to take effect.</p>"},{"location":"webserver/application/#main-configuration","title":"Main Configuration","text":"<p>The main configuration includes ROS 2 domain ID, namespace, and RMW Implementation. Basic information about these settings can be found on this docs site both in the ROS 2 Middleware Configuration and Multi-Robot Setup pages. Further details on these settings can be found in the official ROS 2 documentation.</p> <p>For robots running Galactic &gt;= G.4 and Humble &gt;= H.1, when Fast-DDS is selected as the RMW, it is possible to direct the robot to use an offboard Fast-DDS Discovery server, as well. Further details on the Fast-DDS Discovery Server can be found here.</p>"},{"location":"webserver/application/#application-ros-2-parameters-file","title":"Application ROS 2 Parameters File","text":"<p>This is a raw yaml file used for configuring ROS 2 parameters. The web server will not validate this yaml file; setting it incorrectly may cause the application to fail to start properly. Details of this will be found in the logs. If this happens, the parameters file can again be edited and saved in the web server in order to correct the problem. An official ROS 2 tutorial on parameters can be found here.</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/connect/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Connect","text":"<p>The connect page of the Create\u00ae 3 webserver allows the robot's name to be changed, and also is used to provision the robot to a 2.4 GHz Wi-Fi network.</p> <p></p> <p>The top of the connect page gives the robot's current IPv4 address.</p> <p>The \"Update Robot Names\" box allows the user to change the robot's hostname (which can also be used to find the robot using mDNS) and its Bluetooth name (which can be used to find it in iRobot Coding.)</p> <p>The \"Connect to a 2.4 GHz Wi-Fi Network\" box allows the user to connect to any network the robot can perceive. Clicking on the box to the right of \"Type your Wi-Fi network name\" should yield a drop-down of all available networks.</p> <p>It may be necessary to change the drop-down for additional radio bands, depending on the region in which the robot is used. If you are using the robot in Japan (JP), please select \"Japan;\" if you are using the robot in any of (AS, CA, FM, GU, KY, MP, PR, TW, UM, US, or VI), please select \"North America.\"</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/home/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Home","text":"<p>The home page of the Create\u00ae 3 webserver includes the version number of the robot.</p> <p></p> <p>When the robot is in access point mode, an \"Identify Robot\" button appears between the banner and version number. Pressing this button will cause the robot to emit a chime. This may be helpful in order to find a particular robot while provisioning multiple robots at once.</p> <p></p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/logs/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Logs","text":"<p>The logs page of the Create\u00ae 3 webserver provides an interface for accessing the robot's system log.</p> <p></p> <p>Note that the logs are lost when the robot loses power. Clicking \"Download Logs\" will pull a raw text file including the logs show on this page; this can also be accessed at <code>/logs-raw</code> on the webserver.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/overview/","title":"iRobot\u00ae Create\u00ae 3 Webserver Overview","text":"<p>Tip</p> <p>If this is your first time using the robot's web server, it's important to run through initial setup.</p> <p>The Create\u00ae 3 robot runs a configuration webserver for modifying settings of the robot. This is a separate process from its ROS 21 application; it is running regardless of the status of that application. The webserver can be accessed via the robot's <code>usb0</code> (Ethernet over USB host), <code>wlan0</code> (provisioned to an external access point), or <code>wlan1</code> (robot as its own access point) interfaces. The robot has a fixed IP address of 192.168.186.2 over its <code>usb0</code> interface, and a fixed IP address of 192.168.10.1 over its <code>wlan1</code> interface. The robot will get an IP address over DHCP as served by your network on its <code>wlan0</code> interface. The webserver is available over http (port 80) in a browser by navigating to its IP address on whichever interface is active.</p> <p>Attention</p> <p>It is not recommended to run the robot's access point while also controlling the robot via ROS 2 or iRobot Coding.</p> <p>Please use the menu to navigate between sections of the webserver, or else navigate directly to the sections below:</p> <ul> <li>Home</li> <li>Connect</li> <li>Update</li> <li>Logs</li> <li>Application</li> <li>Beta Features<ul> <li>Serial Forwarder</li> </ul> </li> <li>About</li> </ul> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All other trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/restart-ntpd/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Restart ntpd","text":"<p>The \"Restart ntpd\" beta menu option of the Create\u00ae 3 webserver instructs the Create\u00ae 3 robot to resynchronize its clock.</p> <p>Please note that this is a beta feature, and as such is not supported by the customer service team. Please exercise caution, as improper use of beta features may result in an inoperable robot.</p> <p>Selecting the \"Restart ntpd\" option will spawn a pop-up requesting confirmation. Restarting the ntp daemon will trigger a time resynchronization with the first time server found.</p> <p>This feature can also be accessed by sending a POST to <code>/api/restart-ntpd</code>.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/serial-config/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Serial Configuration","text":"<p>The Serial Configuration page of the Create\u00ae 3 webserver configures a feature which can forward certain USB devices over a socket.</p> <p></p> <p>Please note that the serial port forwarder is a beta feature, and as such is not supported by the customer service team. Please exercise caution, as improper use of beta features may result in an inoperable robot.</p> <p>To enable this feature on the robot the first time, it is necessary to navigate to this page, press save, and then reboot the robot. Subsequent saved changes on this page do not require a reboot; they simply require an unplug-plug sequence to trigger the daemon.</p> <p>The \"TTY device to forward\" box tells the Create 3 robot what device to forward; this is the device's name as it would appear in <code>/dev</code>. Plugging a supported device into the robot should produce messages in the log from the kernel, from which this device name can be found.</p> <p>The \"baud rate\" box should be set to match the device in question.</p> <p>The \"external port number\" can be set to anything, as long as it is <code>8883</code>. The port number may become more configurable when this feature comes out of beta.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/set-datetime/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Set Date and Time","text":"<p>The Set Date and Time page of the Create\u00ae 3 webserver allows the user to directy change the robot's date and time.</p> <p></p> <p>Please note that this is a beta feature, and as such is not supported by the customer service team. Please exercise caution, as improper use of beta features may result in an inoperable robot.</p> <p>The page first shows the current date and time on the robot on load. Simply change the date and time and click \"save\" to save.</p> <p>This feature can also be accessed by sending a POST to <code>/api/set-datetime/newdatetime={YYYY-MM-DDThh:mm:ss}</code>.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/set-wired-subnet/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Set Wired Subnet","text":"<p>The Set Wired Subnet page of the Create\u00ae 3 webserver allows the user to change the robot's /24 subnet within the class C private address area.</p> <p></p> <p>Please note that this is a beta feature, and as such is not supported by the customer service team. Please exercise caution, as improper use of beta features may result in an inoperable robot.</p> <p>This page allows the user to change the robot's /24 subnet within the class C private address area (192.168.nnn.0/24). After pressing \"save,\" the robot must have its power cycled in order for the change to be made.</p> <ol> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"},{"location":"webserver/update/","title":"iRobot\u00ae Create\u00ae 3 Webserver - Update","text":"<p>The update page of the Create\u00ae 3 webserver provides an interface for updating the robot's firmware.</p> <p></p> <p>The top of the connect page gives the robot's current firmware version, calling out the robot's current ROS 21 version.</p> <p>When the robot is on the Internet, a button will appear at the top of the page which should cause the robot to download the most recent update from iRobot's web site and then flash it to the robot. A drop-down box is available to select the latest firmware release for available ROS 2 versions. The default selection will be the latest firmware release for the currently installed ROS 2 version.</p> <p>If a specific firmware version is needed, there is a hyperlink which will expand the menu in order to allow the user to upload firmware of their choosing.</p> <p></p> <p>Clicking the \"choose file\" button will allow the user to select a local firmware file; once selected, click \"upload file and update\" to begin the process.</p> <p>This video outlines the steps in detail:</p> <ol> <li> <p>ROS 2 is governed by Open Robotics\u00a0\u21a9</p> </li> <li> <p>All trademarks mentioned are the property of their respective owners.\u00a0\u21a9</p> </li> </ol>"}]}